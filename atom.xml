<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[里脊串的开发随笔]]></title>
  <subtitle><![CDATA[途有境而观无垠]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://adad184.com/"/>
  <updated>2015-07-08T07:33:48.000Z</updated>
  <id>http://adad184.com/</id>
  
  <author>
    <name><![CDATA[里脊串]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[个人常用iOS第三方库以及XCode插件介绍]]></title>
    <link href="http://adad184.com/2015/07/08/my-favorite-libraries-and-plugins/"/>
    <id>http://adad184.com/2015/07/08/my-favorite-libraries-and-plugins/</id>
    <published>2015-07-08T07:50:46.000Z</published>
    <updated>2015-07-08T07:33:48.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><hr>
<p>第三方库是现在的程序员离不开的东西 不光是APP开发 基本上所有的商业项目 都会或多或少的使用到第三方库 </p>
<p>Github上Star&gt;100的开源库数量如下</p>
<p>可以看到JS以绝对的优势排名第一 一定程度上也说明了JS在这几年为什么发展得这么迅速 不会点JS都不好意思说自己是码农 不过现在JS圈的造轮子浪潮也是愈演愈烈了 自己不写个框架都不好意思打招呼</p>
<p>OC排名第四 相信这个排名还会上升 Swift暂时还挤不进前十 不过超过OC 也是指日可待(毕竟亲儿子)</p>
<p>Xcode基本是Mac/iOS程序员的必备工具(AppCode我没用过 不知道有多少人用?) 但是能说有多好用..这就仁者见仁了(跟Visual Studio是没得比了) 不过在用了插件以后 倒也能让生产力提升一大截</p>
<p>接下来我会介绍一些我本人常用的第三方库和插件 也许不多 但是一定是久经考验 用了一定不会错</p>
<h2 id="介绍">介绍</h2><hr>
<p>　
　</p>
<h3 id="第三方库">第三方库</h3><blockquote>
<h3 id="CocoaPod"><a href="https://cocoapods.org/" target="_blank" rel="external"><code>CocoaPod</code></a></h3><p>CocoaPod并不是iOS上的第三方库 而是大名鼎鼎的第三方库的管理工具<br>在CocoaPod没有出现之前 第三方库的管理是非常痛苦的 尤其是一些大型的库(比如nimbus) 每次对库进行更新 都可能会非常的痛苦<br>CocoaPod的出现解决了这些问题 以Framework的方式引入第三方库 极大的节约了集成的时间 而且通吃Objective-C和Swift(Swift上的<a href="https://github.com/Carthage/Carthage" target="_blank" rel="external">Cathatage</a>我没有实际用过 但是它的那种集成方式还是比CocoaPod麻烦点)</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="iCarousel"><a href="https://github.com/nicklockwood/iCarousel" target="_blank" rel="external">iCarousel</a></h3><p>在iOS 4.x的时代(我也是从4.0开始接触iOS开发的) <code>Coverflow</code>的效果可谓是风靡一时 初出茅庐的我当年对如何实现几乎是束手无策(当年所有的电影资讯类的APP 如布丁爱生活等 都需要实现Coverflow选片的效果 碰巧我也要做一个) iCarousel的出现替我解决了一个大的难题<br>从此iCarousel成为了我每个项目的必备良药 不管是Coverflow还是轮播广告 都能轻描淡写的搞定 其内置的十来种显示类型 基本可以解决90%的UI需求 而其强大的自定义功能 则可以解决剩余的10% :)<br>不熟悉的朋友可以尝试一下其精美绝伦的demo(<code>pod try iCarousel</code>)<br>作者<a href="https://github.com/nicklockwood?tab=repositories" target="_blank" rel="external">nicklockwood</a>也是一个高产的大神 同时维护着数量众多且优质的开源库(比如<a href="https://github.com/nicklockwood/iVersion" target="_blank" rel="external">iVersion</a> <a href="https://github.com/nicklockwood/iRate" target="_blank" rel="external">iRate</a>) 大家不妨去看一看 淘一淘</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="AFNetworking/Alamofire"><a href="https://github.com/nicklockwood?tab=repositories" target="_blank" rel="external">AFNetworking</a>/<a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="external">Alamofire</a></h3><p>HTTP框架的龙头老大 当年在与<a href="https://github.com/pokeb/asi-http-request" target="_blank" rel="external">ASIHTTPRequest</a>的竞争中笑到了最后(当然也是因为ASIHTTPRequest的作者不维护了 不过国内很多公司 因为历史原因都在自行维护) 由于及时维护和拥抱语言的新特性 迅速被大家所接受和喜爱<br>相信每个人都用过 这里就不赘述了</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="MKNetworkKit"><a href="https://github.com/MugunthKumar/MKNetworkKitrs/SDWebImage" target="_blank" rel="external">MKNetworkKit</a></h3><p>如果说AFNetworking是老大 那么MKNetworkKit可以说是小弟了 不过也因为比AFNetworking轻量的原因 也获得了许多开发者的青睐<br>当年因为ASIHTTPRequest停止维护了 在机缘巧合之下 我在AFNetworking和MKNetworkKit之间选择了后者 并在很多项目中进行了使用<br>不过也许是因为AFNetworking发展得更快更迅速 而作者本人是单兵作战的原因 作者也基本放弃了更新(版本号在停留在0.8x) 十分可惜</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="SDWebImage"><a href="https://github.com/AFNetworking/AFNetworkingrs/SDWebImage" target="_blank" rel="external">SDWebImage</a></h3><p>图片异步下载和缓存管理的集大成者 UITableView的黄金搭档 其代码被开发者研究分享过无数次 <a href="https://github.com/onevcat?tab=repositories" target="_blank" rel="external">喵大</a>的<a href="https://github.com/onevcat/Kingfisher" target="_blank" rel="external">Kingfisher</a>(可以说是Swift版的SDWebImage)也是深受其影响<br>异步下载AFNetworking和MKNetworkKit都有实现 数据缓存也有<a href="https://github.com/path/FastImageCache" target="_blank" rel="external">FastImageCache</a>与<a href="https://github.com/tumblr/TMCache" target="_blank" rel="external">TMCache</a>等 但是将其融会贯通的 唯有SDWebImage了<br>除了简单的使用<code>sd_setImageWithURL</code>之外 <code>SDImageCache</code>也是可以独立使用的 功能也相当之强大</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="ZXingObjC"><a href="https://github.com/AFNetworking/AFNetworkingrs/SDWebImage" target="_blank" rel="external">ZXingObjC</a></h3><p><a href="https://github.com/zxing/zxing" target="_blank" rel="external">zxing</a>是Google出品的二维码扫描组件 原本是Java编写的 现在也有了各种语言的移植版 而ZXingObjC就是其中之一<br>zxing支持各种主流的一维码二维码扫描 简单易用 小厂如果要实现二维码扫描这个功能 基本都会选择zxing<br>不过iOS7已内置了二维码扫描 而iOS8也已内置了一维码扫描 以后可能再也不需要用到ZXing了 :(</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="MBProgressHUD"><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="external">MBProgressHUD</a></h3><p>简单易用且稳定的HUD组件 半透明黑底白字的风格也经久不衰 loading提示的最佳选择</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="Masonry/SnapKit"><a href="https://github.com/SnapKit/Masonry" target="_blank" rel="external">Masonry</a>/<a href="https://github.com/SnapKit/SnapKit" target="_blank" rel="external">SnapKit</a></h3><p>最好用的Autolayout手写库(<a href="https://github.com/robb/Cartography" target="_blank" rel="external">Cartography</a>也不错啦 但是还是用不惯) 帮助我轻易的跨越了Autolayout这道坎<br>我也曾多次在<a href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/" target="_blank" rel="external">文章中</a>提到过关于Masonry的使用方法 如果还没有用过的朋友 不妨看一看</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="pop"><a href="https://github.com/facebook/pop" target="_blank" rel="external">pop</a></h3><p>Facebook的工程师一直是神一般的存在 对开源社区的<a href="https://github.com/facebook?page=1" target="_blank" rel="external">贡献</a>也是巨大的 极大的推动了各种变成语言的发展 比如<a href="https://github.com/facebook/hhvm" target="_blank" rel="external">HipHop</a>之于PHP <a href="https://github.com/facebook/react" target="_blank" rel="external">react</a>之于JavaScript pop之于Objective-C等等<br>不管是<code>HipHop</code> <code>react</code> Facebook的工程师总是抱着颠覆的态度来开源 pop也不例外 这点之前我也<a href="http://adad184.com/2015/03/11/intro-to-pop/" target="_blank" rel="external">简单介绍</a>过 而以pop为基础的<a href="https://itunes.apple.com/us/app/paper-stories-from-facebook/id794163692?mt=8" target="_blank" rel="external">paper</a>一发布就震惊整个APP届 在这点上pop也是厥功甚伟<br>pop对自定义动画也支持得很好 我也以pop的自定义动画为基础写过<a href="https://github.com/adad184/MMTweenAnimation" target="_blank" rel="external">MMTweanAnimation</a></p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="ReactiveCocoa"><a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="external">ReactiveCocoa</a></h3><p>说起来惭愧 大名鼎鼎的RAC 我只使用了点皮毛(只拿来做输入验证了)<br>暂时还没有进行深层次的使用 对RAC的理解也停留在表面阶段 不过<a href="http://www.itiger.me/?p=38" target="_blank" rel="external">这篇文章</a>介绍得非常详细 值得一看</p>
</blockquote>
<p>　　</p>
<blockquote>
<h3 id="GPUImage"><a href="https://github.com/BradLarson/GPUImage" target="_blank" rel="external">GPUImage</a></h3><p>如果你要做图像(照片或者视频)的相关处理 或者只是简单的想做个像Camera360一样的拍照滤镜 那么你一定要研究一下GPUImage<br>如它的名字所述 GPUImage是基于GPU的图像处理框架 我们都知道 GPU是提升性能的关键 这也就是GPUImage如此重要 如此受欢迎的原因</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="Lumberjack"><a href="https://github.com/CocoaLumberjack/CocoaLumberjack" target="_blank" rel="external">Lumberjack</a></h3><p>log系统是每个项目都应该有的东西 而Lumberjack是log系统中的翘楚<br>你可以简单的把它当成NSLog的替代品(简单来说 Lumberjack比NSLog速度更快) 或者根据你的需要来打造一个更强大的日志系统</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="NSLogger"><a href="https://github.com/fpillet/NSLogger" target="_blank" rel="external">NSLogger</a></h3><p>从名字可以看出 NSLogger也是一个log系统 其特点是附带了一个功能强大的<a href="https://github.com/fpillet/NSLogger/releases" target="_blank" rel="external">Desktop Viewer</a> 可以让你方便的查看APP产生的日志(支持分级筛选等等 甚至可以直接log一张图片)</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="AwesomeMenu"><a href="https://github.com/levey/AwesomeMenu" target="_blank" rel="external">AwesomeMenu</a></h3><p>当年横空出世的Path 其优美的设计 精彩的动画 不知让多少人嘴巴都合不拢 而最赞的 就是它的弹出菜单 一时成为了每个APP争相模仿的对象<br>有了AwesomeMenu 你可以轻易的实现它</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="MMDrawerController"><a href="https://github.com/mutualmobile/MMDrawerController" target="_blank" rel="external">MMDrawerController</a></h3><p>普通的侧滑菜单 用MMDrawerController就搞定了</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="realm"><a href="https://github.com/realm/realm-cocoa" target="_blank" rel="external">realm</a></h3><p>作为数据存储的一等公民 CoreData的地位不言而喻 不过也因为使用起来不够方便 才会出现<a href="https://github.com/magicalpanda/MagicalRecord" target="_blank" rel="external">MagicalRecord</a>这种辅助类 甚至<a href="https://github.com/ccgus/fmdb" target="_blank" rel="external">fmdb</a>这种基于纯sqlite的库<br>而realm以挑战者的身份闪亮登场 不仅读取<code>性能更快</code>(据说数倍于CoraData) 接口<code>简单易用</code>(以对象的形式使用数据 这点和leancloud的思路很相似) 并且还<code>跨平台</code>(iOS/Android均可使用 OC/Swift/Java都支持)<br>如果你习惯使用<a href="https://github.com/Mantle/Mantle" target="_blank" rel="external">Mantle</a>之类的Modal转换的话 <a href="https://github.com/matthewcheok/Realm-JSON" target="_blank" rel="external">Realm-JSON</a>肯定能讨你欢心<br>作为YCombinator的孵化项目 其质量还是能得以保证的 至少我试用下来 确实给我以很大的惊喜 不管是API的设计 还是数据对象的定义 就连数据库的版本升级 都非常的方便)</p>
</blockquote>
<p>　
　</p>
<h3 id="Xcode插件">Xcode插件</h3><blockquote>
<h3 id="Alcatraz"><a href="https://github.com/supermarin/Alcatraz" target="_blank" rel="external">Alcatraz</a></h3><p>与CocoaPod类似 Alcatraz是Xcode的插件管理器 能够让你方便的管理Xcode的插件(不仅可以管理插件 还可以管理主题等等)</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="FuzzyAutocomplete"><a href="https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin" target="_blank" rel="external">FuzzyAutocomplete</a></h3><p>如果只让我选一个插件留下 那必须是FuzzyAutocomplete 强大的模糊匹配输入 让你写代码的时候再也不用费脑子去记住名字那么长的对象或者函数名了 好用到让你想哭</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="XAlign"><a href="https://github.com/qfish/XAlign" target="_blank" rel="external">XAlign</a></h3><p>作为有洁癖的码农 看到不对齐的代码一定是不能忍的 XAlign可以轻松解决你的烦恼</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="VVDocumenter-Xcode"><a href="https://github.com/onevcat/VVDocumenter-Xcode" target="_blank" rel="external">VVDocumenter-Xcode</a></h3><p>喵大的又一力作 能够识别当前函数的参数和返回类型 帮助你快速编写符合规范的注释(目前是以Javadoc为标准)</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="deriveddata-exterminator"><a href="https://github.com/kattrali/deriveddata-exterminator" target="_blank" rel="external">deriveddata-exterminator</a></h3><p>如果你老是遇到Xcode抽风 提示你要因为某个原因要删除某个目录下的文件 否则编译不过 那你一定会被这个插件感动 因为说明了遇到这个事的人不只你一个</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="Xcode-Quick-Localization"><a href="https://github.com/nanaimostudio/Xcode-Quick-Localization" target="_blank" rel="external">Xcode-Quick-Localization</a></h3><p>多语言在iOS开发中一直不是很方便 有了它 你可以省不少事</p>
</blockquote>
<p>　</p>
<blockquote>
<h3 id="Backlight-for-XCode"><a href="https://github.com/limejelly/Backlight-for-XCode" target="_blank" rel="external">Backlight-for-XCode</a></h3><p>就如果Xcode默认的80个字的分页提示一样 高亮当前正在编辑的一行 也是一种友好的提示 喜不喜欢也就因人而异了
　</p>
</blockquote>
<h1 id="小结">小结</h1><hr>
<p>以上的介绍 都是从我自身的使用经验触发的 可能大部分大家都用过了 而我也将会持续的更新这份列表 只要有优秀使用的东东 我都会添加进来</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><hr>
<p>第三方库是现在的程序员离不开的东西 不光是APP开发 基本上所有的商业项目 都会或多或少的使用到第三方库 </p>
<p>Github上Star&gt;100的开源库数量如下</p>
<p>可以看到JS以绝对的优势排名第一 一]]>
    </summary>
    
      <category term="Xcode" scheme="http://adad184.com/tags/Xcode/"/>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="plugins" scheme="http://adad184.com/tags/plugins/"/>
    
      <category term="third party" scheme="http://adad184.com/tags/third-party/"/>
    
      <category term="经验介绍" scheme="http://adad184.com/categories/%E7%BB%8F%E9%AA%8C%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开源项目:XXPagingScrollView]]></title>
    <link href="http://adad184.com/2015/07/01/opensource-xxpagingscrollview/"/>
    <id>http://adad184.com/2015/07/01/opensource-xxpagingscrollview/</id>
    <published>2015-07-01T08:39:46.000Z</published>
    <updated>2015-07-06T08:17:21.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/XXPagingScrollView" target="_blank" rel="external">XXPagingScrollView</a> 源于对<a href="http://adad184.com/2014/11/05/beautyidea-wandoujia-design-award/" target="_blank" rel="external">最美创意</a>的改版重构 由于对现在版本的UI不是太满意 加上想练习一下swift 所以决定用swift来重写最美创意第二版( T_T 因为设计的问题 暂已搁置 跪求惺惺相惜的设计师好基友~~)  </p>
<p>界面暂时由我自己来设计 首页的风格我参考了<a href="https://itunes.apple.com/us/app/tinder/id547702041?mt=8" target="_blank" rel="external">Tinder</a>  所以就有了<code>XXPagingScrollView</code></p>
<h2 id="分析">分析</h2><hr>
<p><img src="https://raw.githubusercontent.com/adad184/XXPagingScrollView/master/demo.gif" alt="XXPagingScrollView"></p>
<a id="more"></a>
<p>通过演示图可以看到 <code>XXPagingScrollView</code> 就是可以自定义paging size的ScrollView 但是UIScrollView仅仅只有一个<code>pagingEnabled</code>属性 并不能指定paging size 这就是说UIScrollView的paging size大小就是其本身的大小 这是不符合我们的要求的</p>
<p>那么怎样达到我们想要的效果呢?</p>
<ul>
<li>方案1: 不使用pagingEnabled属性 而是手动的计算并设置滑动偏移</li>
<li>方案2: 使用pagingEnabled属性 扩大scrollview的显示范围即可(我采用的就是这种方法)</li>
</ul>
<p>方案1的计算相对麻烦一些 这里不赘述 我们来说说方案2到底是怎么回事</p>
<p>正常来说 我们使用UIScrollView是这样的<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview1.png" alt=""></p>
<p>当我们滑动时 看到的内容是这样的<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview2.png" alt=""></p>
<p>但是实际上 我们现在想要看到的内容是这样的<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview6.png" alt=""></p>
<p>那么 其实我们只要在原来的基础上 扩大UIScrollView的可显示范围就可以了<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview3.png" alt=""></p>
<p>扩大的显示范围后 我们看到的就是这个样子<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview4.png" alt=""></p>
<p>而为了达到这个目的 我们只需要把UIScrollView放入到另一个Container里面就可以了<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-07-76-opensource-xxpagingscrollview5.png" alt=""></p>
<p>到了这一步 我们就只要解决两个问题 </p>
<ol>
<li>让UIScrollView显示超出其本身范围的内容</li>
<li>让UIScrollView响应超出其本身范围的触摸事件</li>
</ol>
<p>而这两个问题其实都容易解决</p>
<ol>
<li>clipsToBounds 就是用来干这个事情的</li>
<li>重写UIView的pointInside事件就可以了</li>
</ol>
<p>至此 一个支持自定义paging size的scrollview就产生了</p>
<h1 id="小结">小结</h1><hr>
<p>其实根据这个思路写 代码非常的简单(总共不超过100行) 在这里分享只是因为这个解决办法相当的简单且巧妙(思路是google得来的) 且不对UIScrollView本身造成任何破坏</p>
<p>最近感觉国内的iOS圈造轮子的情绪相当的高涨 但是其实可以换一种思路来解决问题</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/XXPagingScrollView">XXPagingScrollView</a> 源于对<a href="http://adad184.com/2014/11/05/beautyidea-wandoujia-design-award/">最美创意</a>的改版重构 由于对现在版本的UI不是太满意 加上想练习一下swift 所以决定用swift来重写最美创意第二版( T_T 因为设计的问题 暂已搁置 跪求惺惺相惜的设计师好基友~~)  </p>
<p>界面暂时由我自己来设计 首页的风格我参考了<a href="https://itunes.apple.com/us/app/tinder/id547702041?mt=8">Tinder</a>  所以就有了<code>XXPagingScrollView</code></p>
<h2 id="分析">分析</h2><hr>
<p><img src="https://raw.githubusercontent.com/adad184/XXPagingScrollView/master/demo.gif" alt="XXPagingScrollView"></p>]]>
    
    </summary>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="paging" scheme="http://adad184.com/tags/paging/"/>
    
      <category term="scrollview" scheme="http://adad184.com/tags/scrollview/"/>
    
      <category term="swift" scheme="http://adad184.com/tags/swift/"/>
    
      <category term="开源项目" scheme="http://adad184.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何使用masonry设计复合型cell]]></title>
    <link href="http://adad184.com/2015/06/08/complex-cell-with-masonry/"/>
    <id>http://adad184.com/2015/06/08/complex-cell-with-masonry/</id>
    <published>2015-06-08T09:20:54.000Z</published>
    <updated>2015-06-09T14:48:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>其实早在<a href="http://weibo.com/u/1364395395" target="_blank" rel="external">@sunnyxx</a>同学发布<a href="https://github.com/forkingdog/UIView-FDCollapsibleConstraints" target="_blank" rel="external">UIView-FDCollapsibleConstraints</a>的时候  我就说要写一下怎么用代码来稍微麻烦的实现复用的问题 但是一直各种没时间(主要是我的办法太复杂 - -) 正好看到<a href="http://www.weibo.com/u/1438670852" target="_blank" rel="external">@叶孤城</a>同学也说了一下<a href="http://www.jianshu.com/p/d5553d0cc942" target="_blank" rel="external">他的解决办法</a> 所以我来说一下我是如何解决这个问题的</p>
<h2 id="分析">分析</h2><p>我们以叶孤城同学的例子来简单分析一下 假设view是这样的(为了方便 将所有的间隙设定为20)<br>正常的布局是这样的<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry1.png" alt=""></p>
<a id="more"></a>
<p>布局代码如下:<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ComplexCell</span>()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vB; <span class="comment">//view blue    height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vY; <span class="comment">//view yellow  height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vR; <span class="comment">//view red     height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vG; <span class="comment">//view green   height:100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line">- (instancetype)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">self</span> ) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">CGFloat</span> spacing = <span class="number">20.0</span>f;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vB</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.vB</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vB</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing,spacing,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">            make<span class="variable">.width</span><span class="variable">.equalTo</span>(@<span class="number">60</span>);</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>)<span class="variable">.priorityLow</span>();</span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cB</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vB</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> blueColor];</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vY</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.vY</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vY</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.vB</span><span class="variable">.mas_right</span>)<span class="variable">.offset</span>(spacing);</span><br><span class="line">            make<span class="variable">.right</span><span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing,<span class="number">0</span>,<span class="number">0</span>,spacing));</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>)<span class="variable">.priorityLow</span>();</span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cY</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vY</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> yellowColor];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vR</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.vR</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vR</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.vB</span><span class="variable">.mas_bottom</span>)<span class="variable">.offset</span>(spacing);</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>,spacing,<span class="number">0</span>,spacing));</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>)<span class="variable">.priorityLow</span>();</span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cR</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vR</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vG</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.vG</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vG</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.vR</span><span class="variable">.mas_bottom</span>)<span class="variable">.offset</span>(spacing);</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>,spacing,<span class="number">0</span>,spacing));</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">100</span>)<span class="variable">.priorityLow</span>();</span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cG</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vG</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> greenColor];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实际效果如图<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry4.png" alt=""><br>看上去还不错</p>
<p>在Masonry中 针对单条的<strong>MASLayoutConstraint</strong>可以进行<strong>active</strong>和<strong>deactive</strong>操作 那么意味着可以动态的启用或者禁用某条预置的约束 所以我们只要预先设置一条高优先级的高度为0(或者宽度为0)的约束 然后在适当的时候激活它不就行了? 先尝试隐藏红色的view 隐藏后如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry5.png" alt=""></p>
<p>啊~哦~ 结果不正确  隐藏是隐藏了 但是间隙没有隐藏 导致缝变大了 这是因为我们仅仅隐藏了view 而没有隐藏view之间的间隔 那么应该如何处理这种情况呢?<br>主流的做法是将这个view的所有约束值全设置成0 然后恢复的时候再还原 这种方法需要记录原值 但是在前言我说了 要用稍微麻烦的方法来解决这个问题 所以肯定不是这样做啦</p>
<p>我采用的方法是group法 具体如下图<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry2.png" alt=""></p>
<p>其实在第一行还有一个groupview如图<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry3.png" alt=""><br>但是因为图显示出来不太好看(不会画图 T_T ) 所以我隐藏了 具体可以看代码细节</p>
<p>每个(或者每组)可以隐藏的view 都对应有一个group view(group其实就是包含了view和spacing) 需要隐藏的时候 直接隐藏这个group 就可以达到既隐藏view又缩短间隙的目的</p>
<p>代码较长 大家可以选择跳过 - -!</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ComplexCell</span>()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MASConstraint *cF; <span class="comment">//constraint first row</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MASConstraint *cB; <span class="comment">//constraint blue</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MASConstraint *cY; <span class="comment">//constraint yellow</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MASConstraint *cR; <span class="comment">//constraint red</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MASConstraint *cG; <span class="comment">//constraint green</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *gF; <span class="comment">//group first row</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *gB; <span class="comment">//group blue</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *gY; <span class="comment">//group yellow</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *gR; <span class="comment">//group red</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *gG; <span class="comment">//group green</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vB; <span class="comment">//view blue    height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vY; <span class="comment">//view yellow  height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vR; <span class="comment">//view red     height:30</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *vG; <span class="comment">//view green   height:100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ComplexCell</span></span></span><br><span class="line"></span><br><span class="line">- (instancetype)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">self</span> ) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">CGFloat</span> spacing = <span class="number">20.0</span>f;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gF</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.gF</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gF</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.top</span><span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cF</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cF</span> deactivate];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gF</span><span class="variable">.clipsToBounds</span> = <span class="literal">YES</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gB</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gF</span> addSubview:<span class="keyword">self</span><span class="variable">.gB</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gB</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.top</span><span class="variable">.bottom</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gF</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cB</span> = make<span class="variable">.width</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cB</span> deactivate];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gB</span><span class="variable">.clipsToBounds</span> = <span class="literal">YES</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gY</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gF</span> addSubview:<span class="keyword">self</span><span class="variable">.gY</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gY</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.right</span><span class="variable">.top</span><span class="variable">.bottom</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gF</span>);</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gB</span><span class="variable">.mas_right</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cY</span> = make<span class="variable">.width</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cY</span> deactivate];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gY</span><span class="variable">.clipsToBounds</span> = <span class="literal">YES</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gR</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.gR</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gR</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>);</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gF</span><span class="variable">.mas_bottom</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cR</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cR</span> deactivate];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gR</span><span class="variable">.clipsToBounds</span> = <span class="literal">YES</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gG</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.gG</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gG</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.contentView</span>);</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gR</span><span class="variable">.mas_bottom</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span><span class="variable">.cG</span> = make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">0</span>)<span class="variable">.priority</span>(<span class="built_in">UILayoutPriorityRequired</span>);</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cG</span> deactivate];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.gG</span><span class="variable">.clipsToBounds</span> = <span class="literal">YES</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vB</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gB</span> addSubview:<span class="keyword">self</span><span class="variable">.vB</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vB</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.edges</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gB</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing, spacing, <span class="number">0</span>, <span class="number">0</span>))<span class="variable">.priorityLow</span>();</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>);</span><br><span class="line">            make<span class="variable">.width</span><span class="variable">.equalTo</span>(@<span class="number">60</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vB</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> blueColor];</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vY</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gY</span> addSubview:<span class="keyword">self</span><span class="variable">.vY</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vY</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.edges</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gY</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing, spacing, <span class="number">0</span>, spacing))<span class="variable">.priorityLow</span>();</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vY</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> yellowColor];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vR</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gR</span> addSubview:<span class="keyword">self</span><span class="variable">.vR</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vR</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.edges</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gR</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing, spacing, <span class="number">0</span>, spacing))<span class="variable">.priorityLow</span>();</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">30</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vR</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vG</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.gG</span> addSubview:<span class="keyword">self</span><span class="variable">.vG</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.vG</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.edges</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.gG</span>)<span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(spacing, spacing, <span class="number">0</span>, spacing))<span class="variable">.priorityLow</span>();</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(@<span class="number">100</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.vG</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> greenColor];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后 为每种不同的布局定义一个枚举(为了举例我随便定义的 0和1代表这个view是否被显示)</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, ComplexType) &#123;</span><br><span class="line">    ComplexType1111,</span><br><span class="line">    ComplexType1110,</span><br><span class="line">    ComplexType0111,</span><br><span class="line">    ComplexType0011,</span><br><span class="line">    ComplexType0010,</span><br><span class="line">    ComplexType1101</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ComplexCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) ComplexType type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setType:(ComplexType)type &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.cF</span> deactivate];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.cB</span> deactivate];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.cY</span> deactivate];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.cR</span> deactivate];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.cG</span> deactivate];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> ComplexType1111:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> ComplexType0111:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cB</span> activate];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> ComplexType0011:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cF</span> activate];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> ComplexType1110:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cG</span> activate];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> ComplexType1101:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cR</span> activate];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> ComplexType0010:</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cF</span> activate];</span><br><span class="line">            [<span class="keyword">self</span><span class="variable">.cG</span> activate];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样  在tableview的datasource中我们只要这样做就可以了<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span> *)tableView &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">return</span> [ComplexCell getHeightByType:indexPath<span class="variable">.row</span>%<span class="number">6</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    </span><br><span class="line">    ComplexCell* cell = [tableView dequeueReusableCellWithIdentifier:<span class="string">@"cell"</span>];</span><br><span class="line">    cell<span class="variable">.type</span> = indexPath<span class="variable">.row</span>%<span class="number">6</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>看看效果 是不是很不错<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry6.png" alt=""></p>
<h2 id="小结">小结</h2><p>文中的demo可以<a href="https://github.com/adad184/DemoComplexCell" target="_blank" rel="external">在这里找到</a> 要注意的地方是约束的priority的设置 另外 这种方式也支持不定长内容的Autolayout</p>
<p>可能很多人看了觉得我在瞎折腾 明明一个挺简单实现的东西 被我一弄 弄得又长又臭 其实不然 像我这种方法虽然麻烦了点(文章开头就指出了) 但是面对稍微复杂点的需求 却是更得心应手(其实有点类似DIV+CSS的感觉有木有?)</p>
<p>使用group的方式 面对同时在横向和纵向都有隐藏要求的时候 会方便很多<br>比如文中举的例子 第一行有时会隐藏蓝色的按钮 有时整个一行都会不显示 这样的话 当我想隐藏按钮时 只要激活按钮的约束 想隐藏整行时 只要激活整行的那条约束就行了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>其实早在<a href="http://weibo.com/u/1364395395">@sunnyxx</a>同学发布<a href="https://github.com/forkingdog/UIView-FDCollapsibleConstraints">UIView-FDCollapsibleConstraints</a>的时候  我就说要写一下怎么用代码来稍微麻烦的实现复用的问题 但是一直各种没时间(主要是我的办法太复杂 - -) 正好看到<a href="http://www.weibo.com/u/1438670852">@叶孤城</a>同学也说了一下<a href="http://www.jianshu.com/p/d5553d0cc942">他的解决办法</a> 所以我来说一下我是如何解决这个问题的</p>
<h2 id="分析">分析</h2><p>我们以叶孤城同学的例子来简单分析一下 假设view是这样的(为了方便 将所有的间隙设定为20)<br>正常的布局是这样的<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-06-09-complex-cell-with-masonry1.png" alt=""></p>]]>
    
    </summary>
    
      <category term="Complex" scheme="http://adad184.com/tags/Complex/"/>
    
      <category term="Masonry" scheme="http://adad184.com/tags/Masonry/"/>
    
      <category term="UITableviewCell" scheme="http://adad184.com/tags/UITableviewCell/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[查找项目中未使用的资源文件]]></title>
    <link href="http://adad184.com/2015/05/11/find-unused-images-in-project/"/>
    <id>http://adad184.com/2015/05/11/find-unused-images-in-project/</id>
    <published>2015-05-11T02:48:34.000Z</published>
    <updated>2015-05-12T02:09:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>一般项目进行都尾声的时候 就要开始清理项目了 一般包括</p>
<ul>
<li>不用的代码(多人维护的时候 总会有垃圾代码产生)</li>
<li>不用的文件(大多是因为需求变更 遗留下来的代码文件)</li>
<li>不用的资源(大多是图片资源)</li>
</ul>
<p>前两项不谈 都是体力活(当然 流程越规范 花费的时间越少)<br>今天主要谈谈怎么处理图片资源</p>
<h2 id="实践">实践</h2><p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-05-11-find-unused-images-in-project.png" alt="资源目录结构"></p>
<p>我一般都是采用<strong>folder references</strong>的方式来组织资源(就是蓝色的文件夹哟 不过可能很多朋友已经用上了Images.xcassets) 相比groups的方式 优点如下</p>
<ul>
<li>直接对资源文件和目录结构进行调整而不需要修改项目文件</li>
<li>资源文件可以重名</li>
<li>如果有不同的target 每个target维护不同的根资源文件夹就行了</li>
</ul>
<p>其他的优缺点对比 我就不在这里赘述了 相信有经验的同学都有体会</p>
<p>采用<strong>folder references</strong>的时候 一般在代码中是要指明其绝对路径的</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">self</span><span class="variable">.btnCreate</span> setImageN:<span class="string">@"Res/circle/nav_create.png"</span> H:<span class="string">@"Res/circle/nav_create.png"</span> D:<span class="literal">nil</span> S:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure>
<p>那么 要找到未使用的资源 其实就很简单了</p>
<ol>
<li>找到代码中所有被引用的资源</li>
<li>遍历资源文件夹 与上面的结果相匹配 找到未引用的资源</li>
</ol>
<h2 id="脚本">脚本</h2><p>按照上面的逻辑 我用python写了一个简单的脚本如下</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os, sys, re, shutil</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">	used_map = &#123;&#125;</span><br><span class="line"> 	resPath  =  <span class="string">"./MagnetPF/Res/"</span>	<span class="comment">#资源目录相对路径</span></span><br><span class="line"> 	depDir   =  <span class="string">"deprecated"</span>		<span class="comment">#过期目录 会将未使用文件挪入这个目录</span></span><br><span class="line"> 	skipDir  = [<span class="string">"message"</span>]			<span class="comment">#将跳过的目录</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">"./"</span>):</span><br><span class="line">		<span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">			<span class="keyword">if</span> file.endswith(<span class="string">".m"</span>):</span><br><span class="line"></span><br><span class="line">				filepath = os.path.join(root, file)</span><br><span class="line">				f = open(filepath, <span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">				<span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">					match = re.findall(<span class="string">".*?@\"(Res.*?.png)\".*?"</span>, line)	<span class="comment">#匹配资源文件</span></span><br><span class="line">					</span><br><span class="line">					<span class="keyword">if</span> match:</span><br><span class="line">						<span class="keyword">for</span> image <span class="keyword">in</span> match:</span><br><span class="line">							<span class="comment"># print image</span></span><br><span class="line">							used_map[image] = <span class="number">1</span>	<span class="comment">#记录</span></span><br><span class="line"></span><br><span class="line">	skipDir.append(depDir)	<span class="comment">#过期目录也会一并跳过</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(resPath):</span><br><span class="line">		<span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line"></span><br><span class="line">			orginfile = os.path.join(root, file) </span><br><span class="line"></span><br><span class="line">			match = re.findall(<span class="string">".*?(Res.*?.png).*?"</span>, orginfile)	<span class="comment">#将相对路径过滤出来</span></span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> match:</span><br><span class="line">				matchfile = match[<span class="number">0</span>].replace(<span class="string">"@2x"</span>,<span class="string">""</span>).replace(<span class="string">"@3x"</span>,<span class="string">""</span>)	<span class="comment">#剔除@2x@3x字样</span></span><br><span class="line"></span><br><span class="line">				<span class="keyword">print</span> matchfile</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> <span class="keyword">not</span> used_map.has_key(matchfile):	<span class="comment">#检测到未使用资源</span></span><br><span class="line"></span><br><span class="line">					filename  = orginfile.split(os.path.sep)[-<span class="number">1</span>]	<span class="comment">#获取文件名</span></span><br><span class="line">					relPath   = orginfile.replace(resPath,<span class="string">""</span>)		<span class="comment">#获取相对路径</span></span><br><span class="line">					originDir = relPath.split(os.path.sep)[<span class="number">0</span>]		<span class="comment">#获取第一层文件夹名(用于跳过筛选)</span></span><br><span class="line">					tofile    = resPath + depDir + <span class="string">"/"</span> + relPath	<span class="comment">#目标文件 (将会被复制到这个路径)</span></span><br><span class="line">					topath    = tofile.replace(filename,<span class="string">""</span>)			<span class="comment">#目标文件夹 (若没有则会创建这个文件夹)</span></span><br><span class="line"></span><br><span class="line">					<span class="keyword">if</span> <span class="keyword">not</span> originDir <span class="keyword">in</span> skipDir:</span><br><span class="line">						<span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(topath):</span><br><span class="line">							os.mkdir(topath)</span><br><span class="line"></span><br><span class="line">						<span class="keyword">print</span> <span class="string">"from: "</span> + orginfile</span><br><span class="line">						<span class="keyword">print</span> <span class="string">"  to: "</span> + tofile</span><br><span class="line">						<span class="keyword">print</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line">						shutil.move(orginfile, tofile)</span><br></pre></td></tr></table></figure>
<h2 id="小结">小结</h2><p>这个代码其实还有几个问题没有解决</p>
<ol>
<li>若含有资源文件的代码被注释 一样会被忽略而不会被移除(当然 代码清理也是应该要做的)</li>
<li>对于用代码拼接的资源(比如xx01.png,xx02.png)会无法识别</li>
<li>不适用于非<strong>folder references</strong>方式引用资源的工程</li>
</ol>
<p>同理 我们可以写类似的代码来清理多语言文件 :)</p>
<p>代码其实是我上周六现学现卖边查google边写的 所以写得不好 若是大家有更好的方案 欢迎一起讨论学习</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>一般项目进行都尾声的时候 就要开始清理项目了 一般包括</p>
<ul>
<li>不用的代码(多人维护的时候 总会有垃圾代码产生)</li>
<li>不用的文件(大多是因为需求变更 遗留下来的代码文件)</li>
<li>不用的资源(大]]>
    </summary>
    
      <category term="Resource" scheme="http://adad184.com/tags/Resource/"/>
    
      <category term="Script" scheme="http://adad184.com/tags/Script/"/>
    
      <category term="经验介绍" scheme="http://adad184.com/categories/%E7%BB%8F%E9%AA%8C%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开源项目:MMTweenAnimation]]></title>
    <link href="http://adad184.com/2015/04/14/opensource-mmtweenanimation/"/>
    <id>http://adad184.com/2015/04/14/opensource-mmtweenanimation/</id>
    <published>2015-04-14T03:32:01.000Z</published>
    <updated>2015-07-01T08:38:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/MMTweenAnimation" target="_blank" rel="external">MMTweenAnimation</a>其实酝酿了有一段时间了 起因是对<a href="https://github.com/facebook/pop" target="_blank" rel="external">POP</a>重度使用后(<a href="http://adad184.com/2015/03/11/intro-to-pop/" target="_blank" rel="external">POP上手教程</a>) 感到的一丝不足 </p>
<ul>
<li>首先 POP提供的自带动画类型太少(比如想实现如下图的物体落地的动画)</li>
<li>其次 除了POPBasicAnimation之外 无法控制动画的duration</li>
</ul>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimationdemo.gif" alt=""></p>
<p>所以趁着休陪产假的空档 研究并做出了<strong>MMTweenAnimation</strong>的第一版</p>
<h2 id="介绍">介绍</h2><hr>
<p><strong>MMTweenAnimation</strong> 是基于Facebook的POP的动画扩展类 提供10种不同的函数动画 </p>
<table>
<thead>
<tr>
<th style="text-align:center">Back</th>
<th style="text-align:center">Bounce</th>
<th style="text-align:center">Circ</th>
<th style="text-align:center">Cubic</th>
<th style="text-align:center">Elastic</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation1.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation2.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation3.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation4.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation5.gif" alt=""></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">Expo</th>
<th style="text-align:center">Quad</th>
<th style="text-align:center">Quart</th>
<th style="text-align:center">Quint</th>
<th style="text-align:center">Sine</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation6.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation7.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation8.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation9.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation10.gif" alt=""></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p>建议使用cocoapod安装<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">pod</span> <span class="string">'MMTweenAnimation'</span></span><br></pre></td></tr></table></figure></p>
<p>使用方式如下</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">MMTweenAnimation *anim = [MMTweenAnimation animation];</span><br><span class="line">anim<span class="variable">.functionType</span>   = MMTweenFunctionBounce;</span><br><span class="line">anim<span class="variable">.easingType</span>     = MMTweenEasingOut;</span><br><span class="line">anim<span class="variable">.duration</span>       = <span class="number">2.0</span>f;</span><br><span class="line">anim<span class="variable">.fromValue</span>      = <span class="number">0</span>;</span><br><span class="line">anim<span class="variable">.toValue</span>        = <span class="number">200</span>;</span><br><span class="line">anim<span class="variable">.animationBlock</span> = ^(<span class="keyword">double</span> c,<span class="keyword">double</span> d,<span class="keyword">double</span> v,<span class="keyword">id</span> target,MMTweenAnimation *animation)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//c: current time, from the beginning of animation</span></span><br><span class="line">    <span class="comment">//d: duration, always bigger than c</span></span><br><span class="line">    <span class="comment">//v: value, after the change at current time</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">UIView</span> *t = (<span class="built_in">UIView</span>*)target;</span><br><span class="line">    t<span class="variable">.center</span> = <span class="built_in">CGPointMake</span>(t<span class="variable">.x</span>, v);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">[targetView pop_addAnimation:anim forKey:<span class="string">@"center.y"</span>];</span><br></pre></td></tr></table></figure>
<h1 id="小结">小结</h1><hr>
<p>库中的动画函数部分借鉴自<a href="https://code.google.com/p/tweener/" target="_blank" rel="external">tweener</a>, 同时有个<a href="http://easings.net/zh-cn" target="_blank" rel="external">很棒的网站</a>对这些动画进行了展示</p>
<p>后续可能还会添加一些功能 比如</p>
<ul>
<li>提供更多类型的动画函数</li>
<li>提供用户自定义的动画函数</li>
<li>动画函数的系数可调节</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/MMTweenAnimation">MMTweenAnimation</a>其实酝酿了有一段时间了 起因是对<a href="https://github.com/facebook/pop">POP</a>重度使用后(<a href="http://adad184.com/2015/03/11/intro-to-pop/">POP上手教程</a>) 感到的一丝不足 </p>
<ul>
<li>首先 POP提供的自带动画类型太少(比如想实现如下图的物体落地的动画)</li>
<li>其次 除了POPBasicAnimation之外 无法控制动画的duration</li>
</ul>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimationdemo.gif" alt=""></p>
<p>所以趁着休陪产假的空档 研究并做出了<strong>MMTweenAnimation</strong>的第一版</p>
<h2 id="介绍">介绍</h2><hr>
<p><strong>MMTweenAnimation</strong> 是基于Facebook的POP的动画扩展类 提供10种不同的函数动画 </p>
<table>
<thead>
<tr>
<th style="text-align:center">Back</th>
<th style="text-align:center">Bounce</th>
<th style="text-align:center">Circ</th>
<th style="text-align:center">Cubic</th>
<th style="text-align:center">Elastic</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation1.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation2.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation3.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation4.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation5.gif" alt=""></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">Expo</th>
<th style="text-align:center">Quad</th>
<th style="text-align:center">Quart</th>
<th style="text-align:center">Quint</th>
<th style="text-align:center">Sine</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation6.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation7.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation8.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation9.gif" alt=""></td>
<td style="text-align:center"><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-4-14-opensource-mmtweenanimation10.gif" alt=""></td>
</tr>
</tbody>
</table>]]>
    
    </summary>
    
      <category term="animation" scheme="http://adad184.com/tags/animation/"/>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="pop" scheme="http://adad184.com/tags/pop/"/>
    
      <category term="开源项目" scheme="http://adad184.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hello world]]></title>
    <link href="http://adad184.com/2015/03/30/hello-world/"/>
    <id>http://adad184.com/2015/03/30/hello-world/</id>
    <published>2015-03-30T12:46:00.000Z</published>
    <updated>2015-04-15T12:02:12.000Z</updated>
    <content type="html"><![CDATA[<p>hello, my little princess. </p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-04-14-hello-world.jpg" alt="my girl"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>hello, my little princess. </p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-04-14-hello-world.jpg" alt="my girl"></p>
]]>
    </summary>
    
      <category term="family" scheme="http://adad184.com/tags/family/"/>
    
      <category term="生活琐碎" scheme="http://adad184.com/categories/%E7%94%9F%E6%B4%BB%E7%90%90%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开源项目:MMParallaxCell]]></title>
    <link href="http://adad184.com/2015/03/28/opensource-mmparallaxcell/"/>
    <id>http://adad184.com/2015/03/28/opensource-mmparallaxcell/</id>
    <published>2015-03-28T02:22:01.000Z</published>
    <updated>2015-04-15T03:25:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/MMParallaxCell" target="_blank" rel="external">MMParallaxCell</a>其实是个很简单的东西 首次使用是在<a href="https://itunes.apple.com/app/id917497614" target="_blank" rel="external">最美创意</a>里 起因是某次改版的时候 想把之前的timeline的展现调整一下</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-1.png" alt="timeline"></p>
<p>参考了很多APP的设计之后 把UI改成了现在的parallax这个样子</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-2.png" alt="parallax"></p>
<p>这次修改 对于我自己来说 还是满意的 对比一下有没有一种立刻高大上了的感觉呢 ヽ(✿ﾟ▽ﾟ)ノ</p>
<p>不过由于各种各样的原因 <strong>最美创意</strong>在很长一段时间内估计也不会更新了 </p>
<h2 id="介绍">介绍</h2><hr>
<p><strong><code>MMParallaxCell</code></strong>是<code>UITableviewCell</code>的子类 用于在<code>UITableview</code>中呈现滑动视差的一个效果 特点是简单易用 不同于同类型的其他项目 <strong><code>MMParallaxCell</code></strong>不需要在代码中做额外的操作 像普通的<code>UITableviewCell</code>使用就okay了</p>
<a id="more"></a>
<p>建议使用cocoapod安装<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">pod</span> <span class="string">'MMParallaxCell'</span></span><br></pre></td></tr></table></figure></p>
<p>使用方式也很简单</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span>* cellIdentifier = <span class="string">@"CellIdentifier"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//用MMParallaxCell代替UITableviewCell</span></span><br><span class="line">    M<span class="built_in">MParallaxCell</span>* cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (cell == <span class="literal">nil</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cell = [[M<span class="built_in">MParallaxCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:cellIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置视差的image就行了</span></span><br><span class="line">    [cell<span class="variable">.parallaxImage</span> sd_setImageWithURL:[<span class="built_in">NSURL</span> URLWithString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"http://lorempixel.com/400/400/technics/%ld/"</span>,indexPath<span class="variable">.row</span>]]];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//你也可以根据你的需求来设置视差图的比例(视差图的高度/cell的高度)</span></span><br><span class="line">    cell<span class="variable">.parallaxRatio</span> = <span class="number">1.2</span>f;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="原理">原理</h1><hr>
<p>我们通过一张模拟图来看一下滑动视差是怎么回事</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-3.png" alt="滑动视差模拟"></p>
<p>可以仔细看一下滑动到不同位置时 图片的差别 (尤其是张和第四张的差别)</p>
<p>再看看其内部是怎样的</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-4.png" alt="滑动视差模拟"></p>
<p>是的 其实就是在滑动的同时 移动图片的位置 造成一种视差的效果</p>
<p>那么稍微想一下 应该就可以发现 图片的位移量 其实是由以下几个值决定的</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-5.png" alt="位移量依赖"></p>
<p>其公式 大概是</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parallaxOffset = <span class="list">(<span class="keyword">parrallaxHeight-cellHeight</span>)</span>*<span class="list">(<span class="keyword">scrollOffset/</span><span class="list">(<span class="keyword">cellHeight+tableHeight</span>)</span>)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h1 id="小结">小结</h1><hr>
<p>基本的细节就介绍到这里 其实还有一些东西没有细讲 比如MMParallaxCell并没有使用接口形式对tableview的contentOffset进行监控(其他的同类型的代码基本都是在scrollViewDidScroll里对cell进行更新) 而是采用了KVO的形式对tableview进行观察 使得整个代码很简洁易用</p>
<p>具体的内容都在代码里 如果想知道可以抽几分钟看一下 :)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><hr>
<p><a href="https://github.com/adad184/MMParallaxCell">MMParallaxCell</a>其实是个很简单的东西 首次使用是在<a href="https://itunes.apple.com/app/id917497614">最美创意</a>里 起因是某次改版的时候 想把之前的timeline的展现调整一下</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-1.png" alt="timeline"></p>
<p>参考了很多APP的设计之后 把UI改成了现在的parallax这个样子</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-28-opensource-mmparallaxcell-2.png" alt="parallax"></p>
<p>这次修改 对于我自己来说 还是满意的 对比一下有没有一种立刻高大上了的感觉呢 ヽ(✿ﾟ▽ﾟ)ノ</p>
<p>不过由于各种各样的原因 <strong>最美创意</strong>在很长一段时间内估计也不会更新了 </p>
<h2 id="介绍">介绍</h2><hr>
<p><strong><code>MMParallaxCell</code></strong>是<code>UITableviewCell</code>的子类 用于在<code>UITableview</code>中呈现滑动视差的一个效果 特点是简单易用 不同于同类型的其他项目 <strong><code>MMParallaxCell</code></strong>不需要在代码中做额外的操作 像普通的<code>UITableviewCell</code>使用就okay了</p>]]>
    
    </summary>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="开源项目" scheme="http://adad184.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POP介绍与使用实践(快速上手动画)]]></title>
    <link href="http://adad184.com/2015/03/11/intro-to-pop/"/>
    <id>http://adad184.com/2015/03/11/intro-to-pop/</id>
    <published>2015-03-11T00:47:29.000Z</published>
    <updated>2015-04-15T03:25:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><hr>
<p>动画在APP开发过程中 大家多多少少都会接触到 而且随着ios7的扁平化风格启用之后 越来越多的APP开始尝试加入各种绚丽的动画交互效果以增加APP的用户体验(当然 还是以国外的APP居多)</p>
<p>有过相关开发经验的同学肯定知道在iOS中 动画相关的部分都是基于Core Animation 但是今天我们不讨论Core Animation 今天的主角是<strong>POP</strong> -来自于Facebook的动画引擎(其实我不喜欢把POP定义为动画引擎 我愿意称它为函数发生器)</p>
<h2 id="介绍">介绍</h2><hr>
<p><a href="https://github.com/facebook/pop" target="_blank" rel="external">官方地址 https://github.com/facebook/pop</a><br>官方介绍(翻译版)</p>
<blockquote>
<p>POP是一个在iOS与OS X上通用的极具扩展性的动画引擎 它在基本的静态动画的基础上增加的弹簧动画与衰减动画 使之能创造出更真实更具物理性的交互动画 POP的API可以快速的与现有的ObjC代码集成并可以作用于任意对象的任意属性<br>POP是个相当成熟且久经考验的框架 Facebook出品的令人惊叹的Paper应用中的所有动画和效果即出自POP</p>
</blockquote>
<a id="more"></a>
<p>安装方式还是推荐使用<a href="http://cocoapods.org/" target="_blank" rel="external">CocoaPod</a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">pod</span> <span class="string">'pop'</span>, <span class="string">'~&gt; 1.0'</span></span><br></pre></td></tr></table></figure></p>
<p>POP的神奇之处在于 它是独立与Core Animation的存在 所以 忘记Core Animation吧 忘记Layer Tree吧 迎接一个简单的明天  (LOL  开玩笑的~:) 很多地方还是会需要Core Animation的 不过说不定哪天苹果大发善心 将动画相关的部分向POP借鉴一点也不是不可能的(比如SpriteKit就借鉴了Cocos2D :)</p>
<h2 id="使用">使用</h2><hr>
<p>POP默认支持三种动画 但同时也支持自定义动画</p>
<ul>
<li>POPBasicAnimation</li>
<li>POPSpringAnimation</li>
<li>POPDecayAnimation</li>
<li>POPCustomAnimation    //自定义动画</li>
</ul>
<p>这里我们只讨论前三种(因为自定义动画我也没用过 :) 先来看看官方的示例代码吧</p>
<h3 id="官方代码示例">官方代码示例</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Basic animations can be used to interpolate values over a specified time period. To use an ease-in ease-out animation to animate a view's alpha from 0.0 to 1.0 over the default duration:</span></span><br><span class="line">POPBasicAnimation *anim = [POPBasicAnimation <span class="string">animationWithPropertyNamed:</span>kPOPViewAlpha];</span><br><span class="line">anim.fromValue = @(<span class="number">0.0</span>);</span><br><span class="line">anim.toValue = @(<span class="number">1.0</span>);</span><br><span class="line">[view <span class="string">pop_addAnimation:</span>anim <span class="string">forKey:</span>@<span class="string">"fade"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//Spring animations can be used to give objects a delightful bounce. In this example, we use a spring animation to animate a layer's bounds from its current value to (0, 0, 400, 400):</span></span><br><span class="line">POPSpringAnimation *anim = [POPSpringAnimation <span class="string">animationWithPropertyNamed:</span>kPOPLayerBounds];</span><br><span class="line">anim.toValue = [NSValue <span class="string">valueWithCGRect:</span>CGRectMake(<span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>, <span class="number">400</span>)];</span><br><span class="line">[layer <span class="string">pop_addAnimation:</span>anim <span class="string">forKey:</span>@<span class="string">"size"</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Decay animations can be used to gradually slow an object to a halt. In this example, we decay a layer's positionX from it's current value and velocity 1000pts per second:</span></span><br><span class="line">POPDecayAnimation *anim = [POPDecayAnimation <span class="string">animationWithPropertyNamed:</span>kPOPLayerPositionX];</span><br><span class="line">anim.velocity = @(<span class="number">1000.</span>);</span><br><span class="line">[layer <span class="string">pop_addAnimation:</span>anim <span class="string">forKey:</span>@<span class="string">"slide"</span>];</span><br></pre></td></tr></table></figure>
<h2 id="POPBasicAnimation">POPBasicAnimation</h2><p>POPBasicAnimation使用最广泛 提供固定时间间隔的动画(如淡入淡出效果)</p>
<h3 id="代码示例1">代码示例1</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POPBasicAnimation *anBasic = [POPBasicAnimation animationWithPropertyNamed:kPOPLayerPositionX];</span><br><span class="line">anBasic.<span class="keyword">to</span>Value = @(<span class="literal">self</span>.square.center.y+<span class="number">300</span>);</span><br><span class="line">anBasic.beginTime = CACurrentMediaTime() + <span class="number">1.0</span>f;</span><br><span class="line">[<span class="literal">self</span>.square pop_addAnimation:anBasic <span class="keyword">for</span>Key:@<span class="string">"position"</span>];</span><br></pre></td></tr></table></figure>
<p>其动画效果如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-11.gif" alt="POPBasicAnimation"></p>
<p>可以看到 添加一个动画最少仅需三步</p>
<ol>
<li>定义一个animation对象 并指定对应的动画属性</li>
<li>设置初始值和默认值(初始值可以不指定 会默认从当前值开始)</li>
<li>添加到想产生动画的对象上</li>
</ol>
<p>POPBasicAnimation可配置的属性与默认值为<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">duration:</span><span class="number">0.4</span>    <span class="comment">//动画间隔</span></span><br></pre></td></tr></table></figure></p>
<p>POPBasicAnimation提供四种timingfunction(很熟悉 对不对? 就是Core Animation中那些)</p>
<ul>
<li>kCAMediaTimingFunctionLinear</li>
<li>kCAMediaTimingFunctionEaseIn</li>
<li>kCAMediaTimingFunctionEaseOut</li>
<li>kCAMediaTimingFunctionEaseInEaseOut</li>
</ul>
<p>其时间函数分别如下</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-1.png" alt="kCAMediaTimingFunctionLinear"><br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-2.png" alt="kCAMediaTimingFunctionEaseIn"><br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-3.png" alt="kCAMediaTimingFunctionEaseOut"><br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-4.png" alt="kCAMediaTimingFunctionEaseInEaseOut"></p>
<h2 id="POPSpringAnimation">POPSpringAnimation</h2><p>POPSpringAnimation也许是大多数人使用POP的理由 其提供一个类似弹簧一般的动画效果(使用后 APP立马就活泼起来了 有木有?!)</p>
<h3 id="代码示例23">代码示例23</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POPSpringAnimation *<span class="variable">anSpring =</span> [POPSpringAnimation animationWithPropertyNamed:kPOPLayerPositionX];</span><br><span class="line">anSpring.<span class="variable">toValue =</span> @(self.square.center.y+<span class="number">300</span>);</span><br><span class="line">anSpring.<span class="variable">beginTime =</span> CACurrentMediaTime() + <span class="number">1.0</span>f;</span><br><span class="line">anSpring.<span class="variable">springBounciness =</span> <span class="number">10.0</span>f;</span><br><span class="line">[self.square pop_addAnimation:anSpring forKey:@<span class="string">"position"</span>];</span><br></pre></td></tr></table></figure>
<p>其动画效果如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-22.gif" alt="动画效果"></p>
<p>POPSpringAnimation可配置的属性与默认值为<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">springBounciness:</span><span class="number">4.0</span>    <span class="comment">//[0-20] 弹力 越大则震动幅度越大</span></span><br><span class="line"><span class="string">springSpeed     :</span><span class="number">12.0</span>   <span class="comment">//[0-20] 速度 越大则动画结束越快</span></span><br><span class="line"><span class="string">dynamicsTension :</span><span class="number">0</span>      <span class="comment">//拉力  接下来这三个都跟物理力学模拟相关 数值调整起来也很费时 没事不建议使用哈</span></span><br><span class="line"><span class="string">dynamicsFriction:</span><span class="number">0</span>      <span class="comment">//摩擦 同上</span></span><br><span class="line"><span class="string">dynamicsMass    :</span><span class="number">0</span>      <span class="comment">//质量 同上</span></span><br></pre></td></tr></table></figure></p>
<p>注意:POPSpringAnimation是没有duration字段的  其动画持续时间由以上几个参数决定</p>
<p>其时间函数如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-5.png" alt="时间函数"></p>
<h2 id="POPDecayAnimation">POPDecayAnimation</h2><p>POPDecayAnimation提供一个过阻尼效果(其实Spring是一种欠阻尼效果) 可以实现类似UIScrollView的滑动衰减效果(是的 你可以靠它来自己实现一个UIScrollView)</p>
<h3 id="代码示例3">代码示例3</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POPDecayAnimation *anDecay = [POPDecayAnimation <span class="string">animationWithPropertyNamed:</span>kPOPLayerPositionX];</span><br><span class="line">anDecay.velocity = @(<span class="number">600</span>);</span><br><span class="line">anDecay.beginTime = CACurrentMediaTime() + <span class="number">1.0</span>f;</span><br><span class="line">[self.square <span class="string">pop_addAnimation:</span>anDecay <span class="string">forKey:</span>@<span class="string">"position"</span>];</span><br></pre></td></tr></table></figure>
<p>其动画效果如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-33.gif" alt="动画效果"></p>
<p>注意:这里对POPDecayAnimation设置toValue是没有意义的 会被忽略(因为目的状态是动态计算得到的)</p>
<p>POPDecayAnimation可配置的属性与默认值为<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deceleration:</span><span class="number">0.998</span>  <span class="comment">//衰减系数(越小则衰减得越快)</span></span><br></pre></td></tr></table></figure></p>
<p>注意:POPDecayAnimation也是没有duration字段的 其动画持续时间由velocity与deceleration决定</p>
<p>其时间函数如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-6.png" alt="时间函数"></p>
<p>接下来我们看一下POP默认支持哪些属性的动画 打开<em>POPAnimatablePropery.h</em>可以看到如下定义(这些是到目前为止 所支持的属性 随着版本的更新 还在不断的新增中 :)</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> Common CALayer property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerBackgroundColor;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerBounds;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerCornerRadius;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerBorderWidth;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerBorderColor;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerOpacity;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerPosition;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerPositionX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerPositionY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerRotation;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerRotationX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerRotationY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerScaleX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerScaleXY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerScaleY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSize;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSubscaleXY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSubtranslationX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSubtranslationXY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSubtranslationY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerSubtranslationZ;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerTranslationX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerTranslationXY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerTranslationY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerTranslationZ;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerZPosition;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerShadowColor;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerShadowOffset;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerShadowOpacity;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayerShadowRadius;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common CAShapeLayer property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPShapeLayerStrokeStart;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPShapeLayerStrokeEnd;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPShapeLayerStrokeColor;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPShapeLayerFillColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common NSLayoutConstraint property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLayoutConstraintConstant;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#if TARGET_OS_IPHONE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UIView property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewAlpha;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewBackgroundColor;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewBounds;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewCenter;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewFrame;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewScaleX;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewScaleXY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewScaleY;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewSize;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPViewTintColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UIScrollView property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPScrollViewContentOffset;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPScrollViewContentSize;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPScrollViewZoomScale;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPScrollViewContentInset;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UITableView property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPTableViewContentOffset;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPTableViewContentSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UICollectionView property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPCollectionViewContentOffset;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPCollectionViewContentSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UINavigationBar property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPNavigationBarBarTintColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UIToolbar property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPToolbarBarTintColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UITabBar property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPTabBarBarTintColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> Common UILabel property names.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kPOPLabelTextColor;</span><br></pre></td></tr></table></figure>
<p>作为刚接触POP的一些同学来说 如果在上面看到你希望的某些属性的话 你可以像<a href="#官方代码示例">官方代码示例</a>一样指定这个属性即可开始动画了<br>但是如果你想要的某些属性不在之上呢 这时候自定义属性POPAnimatableProperty就排上用场了</p>
<h2 id="自定义属性">自定义属性</h2><p>POP默认支持的三种动画都继承自<a href="#继承关系">POPPropertyAnimation</a> POPPropertyAnimation中定义了一个叫property的属性( 之前没有用到它是因为POP根据不同的默认动画属性帮你生成了默认的property) 而这个property则是用来驱动POP的动画效果中的重要一环</p>
<h3 id="代码示例4">代码示例4</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POPAnimatableProperty *<span class="keyword">prop</span> = [POPAnimatableProperty propertyWithName:@<span class="string">"prop"</span> initializer:^(POPMutableAnimatableProperty *<span class="keyword">prop</span>) &#123;</span><br><span class="line">    <span class="comment">// read value</span></span><br><span class="line">    <span class="keyword">prop</span>.readBlock = ^(id obj, CGFloat values[]) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// write value</span></span><br><span class="line">    <span class="keyword">prop</span>.writeBlock = ^(id obj, <span class="keyword">const</span> CGFloat values[]) &#123;</span><br><span class="line">    </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// dynamics threshold</span></span><br><span class="line">    <span class="keyword">prop</span>.threshold = 0.01;</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>其组成就是一个readBlock一个writeBlock和一个threashold</p>
<ul>
<li>readBlock告诉POP当前的属性值</li>
<li>writeBlock中修改变化后的属性值</li>
<li>threashold决定了动画变化间隔的阈值 值越大writeBlock的调用次数越少</li>
</ul>
<p>POPAnimatableProperty其实是POP中一个比较重要的东西 像上面提到的POP自带的动画属性 查看源代码可以看到也只是POP自动帮你设置好了POPAnimatableProperty而已 其作用就是当动画的某个时间片被触发时 告诉系统如何根据当前时间片做出变化</p>
<p>还是以一个实际的例子来说明如何使用自定义属性 比如我们要实现一个像系统的时钟APP里秒表计时的一个效果</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    POPAnimatableProperty *prop = [POPAnimatableProperty propertyWithName:<span class="string">@"countdown"</span> initializer:^(POPMutableAnimatableProperty *prop) &#123;</span><br><span class="line">        </span><br><span class="line">        prop<span class="variable">.writeBlock</span> = ^(<span class="keyword">id</span> obj, <span class="keyword">const</span> <span class="built_in">CGFloat</span> values[]) &#123;</span><br><span class="line">            <span class="built_in">UILabel</span> *lable = (<span class="built_in">UILabel</span>*)obj;</span><br><span class="line">            label<span class="variable">.text</span> = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%02d:%02d:%02d"</span>,(<span class="keyword">int</span>)values[<span class="number">0</span>]/<span class="number">60</span>,(<span class="keyword">int</span>)values[<span class="number">0</span>]%<span class="number">60</span>,(<span class="keyword">int</span>)(values[<span class="number">0</span>]*<span class="number">100</span>)%<span class="number">100</span>];</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        prop.threshold = 0.01f;</span></span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    POPBasicAnimation *anBasic = [POPBasicAnimation linearAnimation];   <span class="comment">//秒表当然必须是线性的时间函数</span></span><br><span class="line">    anBasic<span class="variable">.property</span> = prop;    <span class="comment">//自定义属性</span></span><br><span class="line">    anBasic<span class="variable">.fromValue</span> = @(<span class="number">0</span>);   <span class="comment">//从0开始</span></span><br><span class="line">    anBasic<span class="variable">.toValue</span> = @(<span class="number">3</span>*<span class="number">60</span>);  <span class="comment">//180秒</span></span><br><span class="line">    anBasic<span class="variable">.duration</span> = <span class="number">3</span>*<span class="number">60</span>;    <span class="comment">//持续3分钟</span></span><br><span class="line">    anBasic<span class="variable">.beginTime</span> = <span class="built_in">CACurrentMediaTime</span>() + <span class="number">1.0</span>f;    <span class="comment">//延迟1秒开始</span></span><br><span class="line">    [label pop_addAnimation:anBasic forKey:<span class="string">@"countdown"</span>];</span><br></pre></td></tr></table></figure>
<p>其动画效果如下<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2015-03-11-intro-pop-44.gif" alt="动画效果"></p>
<p>有没有从中得到一些启发呢? POP可以做的事情可远比Core Animation要多(注意这里我们使用了beginTime这个属性来设置动画的延迟施放) 例如音乐播放时那种淡入淡出的效果等等也可以用POP来实现</p>
<h2 id="小结">小结</h2><hr>
<p>其实只需要熟练掌握POP自带的三种动画 即可完成大部分的动画效果 如果实在是无法满足你的需求的话 自定义动画也基本可以满足你的要求 可以说POP化繁为简的出现 极大的方便了我们这些苦逼的coder</p>
<p>当然 就像我说的 POP不仅仅是一个动画引擎 相信经过我最后一个例子 大家可以得到一点启事 POP能做的事情还不少 :)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><hr>
<p>动画在APP开发过程中 大家多多少少都会接触到 而且随着ios7的扁平化风格启用之后 越来越多的APP开始尝试加入各种绚丽的动画交互效果以增加APP的用户体验(当然 还是以国外的APP居多)</p>
<p>有过相关开发经验的同学肯定知道在iOS中 动画相关的部分都是基于Core Animation 但是今天我们不讨论Core Animation 今天的主角是<strong>POP</strong> -来自于Facebook的动画引擎(其实我不喜欢把POP定义为动画引擎 我愿意称它为函数发生器)</p>
<h2 id="介绍">介绍</h2><hr>
<p><a href="https://github.com/facebook/pop">官方地址 https://github.com/facebook/pop</a><br>官方介绍(翻译版)</p>
<blockquote>
<p>POP是一个在iOS与OS X上通用的极具扩展性的动画引擎 它在基本的静态动画的基础上增加的弹簧动画与衰减动画 使之能创造出更真实更具物理性的交互动画 POP的API可以快速的与现有的ObjC代码集成并可以作用于任意对象的任意属性<br>POP是个相当成熟且久经考验的框架 Facebook出品的令人惊叹的Paper应用中的所有动画和效果即出自POP</p>
</blockquote>]]>
    
    </summary>
    
      <category term="animation" scheme="http://adad184.com/tags/animation/"/>
    
      <category term="pop" scheme="http://adad184.com/tags/pop/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于autolayout在ios8以下出现'Auto Layout still required after executing -layoutSubviews.'的bug]]></title>
    <link href="http://adad184.com/2015/03/10/bugs-in-autolayout-below-ios8/"/>
    <id>http://adad184.com/2015/03/10/bugs-in-autolayout-below-ios8/</id>
    <published>2015-03-10T00:47:29.000Z</published>
    <updated>2015-04-15T03:26:15.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><hr>
<p>很久没有更新blog了 一是因为换了工作在赶新项目导致白天没时间 二是因为孩子快出生了导致晚上没时间 周末就更不自由啦 </p>
<p>看了今天的苹果发布会的新闻 还是挺激动的啊 不管是watch 还是macbook </p>
<h1 id="问题">问题</h1><hr>
<p>这次说的这个问题也是年前在调bug的时候出现的 由于开发一直是在ios8上进行的 所以一路顺风顺水没有任何问题 直到有一天 一个同事拿着他的ios7.x的iphone5S要我帮忙装一个最新的开发版 然后使用过程中就出现了闪退 一查就是如题的错误log<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Auto</span> <span class="variable">Layout</span> still required <span class="keyword">after</span> executing -layout<span class="variable">Subviews</span>.</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>ok google了一下 发现stackoverflow上面也有不少人遇到了这种情况 基本的解决办法是 派生对应的类 然后在类方法中重载<strong>layoutSubviews</strong><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">-</span> (void)<span class="tag">layoutSubviews</span> &#123;</span><br><span class="line">    <span class="attr_selector">[super layoutSubviews]</span>;</span><br><span class="line">    <span class="comment">// code to scroll the view</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>还有另一种方法是使用swizzle method 替换layoutSubviews的默认行为 本质上也是一样的解决思路</p>
<p>但是 无论怎么尝试都没有办法解决我的问题 经过自己的摸索之后 终于得出了解决</p>
<h1 id="方法">方法</h1><hr>
<p>其实问题出现的原因(或者说解决的方法)很简单也很蛋疼</p>
<p>以UITableView为例 导致这个问题出现的原因是因为我在tableView上add了一个自定义的subview(对 就这么简单) 那么解决问题的方法就是把这个subview给去掉 </p>
<p>同样的问题也出现在了UITextfield上 同样去掉subview就ok了(其他的原生控件上暂时没有做类似布局 所以是否其他控件也有类似问题不得而知 如果大家遇到了这种问题 可以尝试查看一下是否有自定义的subview)</p>
<p>具体的原因我也无法深究 但应该是在ios7之前的autolayout本身存在着缺陷所导致 ios8后修复了这些问题(stackoverflow上很多人是这么说的) </p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><hr>
<p>很久没有更新blog了 一是因为换了工作在赶新项目导致白天没时间 二是因为孩子快出生了导致晚上没时间 周末就更不自由啦 </p>
<p>看了今天的苹果发布会的新闻 还是挺激动的啊 不管是watch 还是macbook </p>
<h1 id="问题">问题</h1><hr>
<p>这次说的这个问题也是年前在调bug的时候出现的 由于开发一直是在ios8上进行的 所以一路顺风顺水没有任何问题 直到有一天 一个同事拿着他的ios7.x的iphone5S要我帮忙装一个最新的开发版 然后使用过程中就出现了闪退 一查就是如题的错误log<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Auto</span> <span class="variable">Layout</span> still required <span class="keyword">after</span> executing -layout<span class="variable">Subviews</span>.</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="autolayout" scheme="http://adad184.com/tags/autolayout/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[「最美创意」豌豆荚设计奖获得者]]></title>
    <link href="http://adad184.com/2014/11/05/beautyidea-wandoujia-design-award/"/>
    <id>http://adad184.com/2014/11/05/beautyidea-wandoujia-design-award/</id>
    <published>2014-11-05T03:39:58.000Z</published>
    <updated>2015-04-15T11:49:03.000Z</updated>
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-11-05-beautyidea-wandoujia-design-award1.png" alt="最美创意"></p>
<p><a href="http://www.wandoujia.com/award/blog/com.bugkr.beautyidea" target="_blank" rel="external">相关获奖介绍</a></p>
<p>最美创意是一款以创意广告、游戏CG、创意短片为主的内容聚合型应用，它给喜爱这些内容的用户一个可以毫不费力找到他们的平台。</p>
<a id="more"></a>
<p><img src="http://a4.mzstatic.com/us/r30/Purple3/v4/78/42/89/7842893d-f9dd-8690-4b15-6ca82cb02266/screen568x568.jpeg" alt="最美创意"></p>
<p><img src="http://a4.mzstatic.com/us/r30/Purple3/v4/d6/fe/dc/d6fedc98-076b-b38e-0b30-e6b751801cd9/screen568x568.jpeg" alt="最美创意"></p>
<p>目前<a href="https://itunes.apple.com/app/id917497614" target="_blank" rel="external">iOS版本</a>是在九月份我花了三天左右的时间完成的 由于时间问题暂没有更新到Android版的(￣◇￣;)</p>
<p>该版本总体设计与Android初版一致 一些细节的地方是由我自己思考完成的 其实三天的时候 有一半都花在了思考上 </p>
<p>这里也有介绍一下<a href="https://www.vitamio.org/" target="_blank" rel="external">Vitamio</a><br>最美创意的视频播放组件就是我基于Vitamio封装完成的 虽然很简陋 但是在需要同时支持MP4和FLV播放的前提下Vitamio是个不错的选择(百度也有类似的组件 但是兼容性不是很好 弃用了)<br>View.image<code>设置为</code>PlaceHolder.png`图片,等待重新布局完后再将原本的图片设置回去就可以了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="介绍">介绍</h1><p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-11-05-beautyidea-wandoujia-design-award1.png" alt="最美创意"></p>
<p><a href="http://www.wandoujia.com/award/blog/com.bugkr.beautyidea">相关获奖介绍</a></p>
<p>最美创意是一款以创意广告、游戏CG、创意短片为主的内容聚合型应用，它给喜爱这些内容的用户一个可以毫不费力找到他们的平台。</p>]]>
    
    </summary>
    
      <category term="award" scheme="http://adad184.com/tags/award/"/>
    
      <category term="经验介绍" scheme="http://adad184.com/categories/%E7%BB%8F%E9%AA%8C%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何用纯代码构建一个Widget(today extension)]]></title>
    <link href="http://adad184.com/2014/10/29/how-to-setup-today-extension-programmatically/"/>
    <id>http://adad184.com/2014/10/29/how-to-setup-today-extension-programmatically/</id>
    <published>2014-10-29T02:11:49.000Z</published>
    <updated>2015-04-15T11:52:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>随着iOS8的发布 各种iPhone的新玩法出现了 其中最引人关注的就是<code>today extension</code>(也叫做widget) 这个在android上存在了多年的小玩意 也是iPhone一直被人诟病的东西 终于能用上了</p>
<p>网上有很多相关的文章教你如何编写一个简单的widget 但是却没有一篇适合我们这种纯代码的拥趸(也有很多人说应该放弃纯代码 改用Storyboard了) 那么接下来我就说说 如何用纯代码的方式来构建一个widget</p>
<h1 id="准备">准备</h1><p>首先 你得有个正常的app项目(这是必须的 extension必须依附于某个app中 当然 不这样 你也无法单独安装某个widget)</p>
<p>打开项目工程 选择新建一个target 在<code>Application Extension</code>中选择<code>today exntension</code> 然后填入名字 确认即可</p>
<a id="more"></a>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically1.png" alt="新建target"></p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically2.png" alt="填入信息"></p>
<p>这时你的项目里多个一个target 同时也多了下面</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically3.png" alt="修改plist"></p>
<p>接下来 删掉这个讨厌的<code>MainInterface.storyboard</code> 然后修改plist文件中的<code>NSExtension</code>字段</p>
<ul>
<li>删掉<code>NSExtensionMainStoryboard</code>字段</li>
<li>添加<code>NSExtensionPrincipalClass</code>字段 并设为<code>TodayViewController</code>(你也可以指定其他的ViewController)</li>
</ul>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically4.png" alt="修改plist"></p>
<p>修改完以后 Widget就可以开始编译运行了</p>
<h1 id="运行">运行</h1><p>关于调试Widget  我推荐使用模拟器而不用真机 因为在研究过程中我发现真机调试的效果非常差 经常提示无法连接到手机(也有可能是5S的性能够不?) 导致无法正常的debug 或者无法reinstall   而模拟器则好点(至少能顺利的打印出log) 但是每次修改好代码以后 最好都先退出模拟器 再重新编译运行 如果你退出重新运行时提示下面这个错误 不用怕 多运行两次就ok了</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically7.png" alt="模拟器报错"></p>
<p>按<code>Command+R</code>编译运行  会弹出提示框让你选择宿主app  就选择默认的today就好了<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically5.png" alt="运行"></p>
<p>如无意外 模拟器启动时会自动打开today 并显示你的widget<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically6.png" alt="效果"></p>
<p>是不是发现什么都没有?  如果用Storyboard构建的Widget 会默认有个<code>Hello</code> 可我们弄出来的Widget 却啥都没有 连高度都没有 </p>
<p>那么问题来了…</p>
<h1 id="修改">修改</h1><p>首先 我们设置一下widget的高度 并添加一个contentView和一个button(注意 这里我使用的是<code>Masonry</code>来完成autolayout 相关信息可见我的上一篇文章:<a href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/" target="_blank" rel="external">Masonry介绍与使用实践(快速上手Autolayout</a>)</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">TodayViewController</span> () &lt;<span class="title">NCWidgetProviding</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">UIView</span> *contentView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIButton</span> *btnTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用preferredContentSize设置大小 且只用设置高度就好了</span></span><br><span class="line">    <span class="keyword">self</span><span class="variable">.preferredContentSize</span> = <span class="built_in">CGSizeMake</span>(<span class="number">0</span>, <span class="number">200</span>);</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> __<span class="keyword">typeof</span>(&amp;*<span class="keyword">self</span>)ws = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.contentView</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.contentView</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:<span class="keyword">self</span><span class="variable">.contentView</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.contentView</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.edges</span><span class="variable">.equalTo</span>(ws<span class="variable">.view</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.btnTest</span> = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeCustom</span>];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.btnTest</span> setTitle:[[<span class="built_in">NSDate</span> date] description] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.btnTest</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.btnTest</span> addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(actionTest) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:<span class="keyword">self</span><span class="variable">.btnTest</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.btnTest</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.center</span><span class="variable">.equalTo</span>(ws<span class="variable">.contentView</span>);</span><br><span class="line">        make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">300</span>, <span class="number">40</span>));</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行一下 看看效果<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically8.png" alt="效果"></p>
<p>控件是出来了 可是没有如我们的意  旁边还空了一块  原来widget默认会有一个inset  那么如何取消这个inset呢?  重载如下方法即可</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIEdgeInsets</span>)widgetMarginInsetsForProposedMarginInsets:(<span class="built_in">UIEdgeInsets</span>)defaultMarginInsets</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIEdgeInsetsZero</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改完以后您再看</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically9.png" alt="效果"></p>
<p>一个Widget的模子就这样构建完成了 </p>
<h1 id="进阶">进阶</h1><p>接下来 我们给button加个点击事件 用来改变widget的大小</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>) actionTest</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.preferredContentSize</span> = <span class="built_in">CGSizeMake</span>(<span class="number">0</span>, <span class="keyword">self</span><span class="variable">.contentView</span><span class="variable">.frame</span><span class="variable">.size</span><span class="variable">.height</span>&gt;<span class="number">250</span>?<span class="number">200</span>:<span class="number">300</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically1.gif" alt="效果"></p>
<p>测试发现效果”还可以”  为什么仅仅是”还可以”呢  可以看到当size变化时 其他区域其实是有个动态变化的效果  但是我们的widget的变化是立即的  所以看上去不那么流畅(storyboard里就不存在这个问题了 因为使用了autolayout)  </p>
<p>那么我们可不可以也使用autolayout 而不设置这个<code>preferredContentSize</code>呢?  答案是可以的</p>
<p>首先修改viewDidLoad的代码<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//去掉这一步</span></span><br><span class="line">    <span class="comment">//self.preferredContentSize = CGSizeMake(0, 200);</span></span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> __<span class="keyword">typeof</span>(&amp;*<span class="keyword">self</span>)ws = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.contentView</span> = [<span class="built_in">UIView</span> new];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.contentView</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:<span class="keyword">self</span><span class="variable">.contentView</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.contentView</span> mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.edges</span><span class="variable">.equalTo</span>(ws<span class="variable">.view</span>);</span><br><span class="line">        <span class="comment">//设置内部view的高度(一定要设置高优先级 不然会有冲突)</span></span><br><span class="line">        make<span class="variable">.height</span><span class="variable">.mas_equalTo</span>(@<span class="number">200</span>)<span class="variable">.priorityHigh</span>();</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后修改按钮的动作</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>) actionTest</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//去掉这一步</span></span><br><span class="line">    <span class="comment">//self.preferredContentSize = CGSizeMake(0, self.contentView.frame.size.height&gt;250?200:300);</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新autolayout</span></span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.contentView</span> mas_updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.height</span><span class="variable">.mas_equalTo</span>(@(<span class="keyword">self</span><span class="variable">.contentView</span><span class="variable">.frame</span><span class="variable">.size</span><span class="variable">.height</span>&gt;<span class="number">250</span>?<span class="number">200</span>:<span class="number">300</span>))<span class="variable">.priorityHigh</span>();</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>试着运行一下  你会发现世界变得很美丽了</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-10-29-how-to-setup-today-extension-programmatically2.gif" alt="效果"></p>
<p><strong>至此 发挥你的想象吧 you can do whatever you want!</strong></p>
<h1 id="小结">小结</h1><p>所有的准备工作都已经做完了 编写一个Widget也变得很简单 你可以像写任何一个ViewController一样来写Widget 而纯代码的方式我相信会让很多人更得心应手</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>随着iOS8的发布 各种iPhone的新玩法出现了 其中最引人关注的就是<code>today extension</code>(也叫做widget) 这个在android上存在了多年的小玩意 也是iPhone一直被人诟病的东西 终于能用上了</p>
<p>网上有很多相关的文章教你如何编写一个简单的widget 但是却没有一篇适合我们这种纯代码的拥趸(也有很多人说应该放弃纯代码 改用Storyboard了) 那么接下来我就说说 如何用纯代码的方式来构建一个widget</p>
<h1 id="准备">准备</h1><p>首先 你得有个正常的app项目(这是必须的 extension必须依附于某个app中 当然 不这样 你也无法单独安装某个widget)</p>
<p>打开项目工程 选择新建一个target 在<code>Application Extension</code>中选择<code>today exntension</code> 然后填入名字 确认即可</p>]]>
    
    </summary>
    
      <category term="today extension" scheme="http://adad184.com/tags/today-extension/"/>
    
      <category term="widget" scheme="http://adad184.com/tags/widget/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Masonry介绍与使用实践(快速上手Autolayout)]]></title>
    <link href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/"/>
    <id>http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/</id>
    <published>2014-09-28T01:53:49.000Z</published>
    <updated>2015-07-01T08:01:55.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MagicNumber -&gt; autoresizingMask -&gt; autolayout</span><br></pre></td></tr></table></figure>
<p>以上是纯手写代码所经历的关于页面布局的三个时期</p>
<ul>
<li><p>在iphone1-iphone3gs时代 window的size固定为(320,480) 我们只需要简单计算一下相对位置就好了</p>
</li>
<li><p>在iphone4-iphone4s时代 苹果推出了retina屏 但是给了码农们非常大的福利:window的size不变</p>
</li>
<li><p>在iphone5-iphone5s时代 window的size变了(320,568) 这时<code>autoresizingMask</code>派上了用场(为啥这时候不用Autolayout?  因为还要支持ios5呗) 简单的适配一下即可</p>
</li>
<li><p>在iphone6+时代 window的width也发生了变化(相对5和5s的屏幕比例没有变化) 终于是时候抛弃<code>autoresizingMask</code>改用autolayout了(不用支持ios5了 相对于屏幕适配的多样性来说<code>autoresizingMask</code>也已经过时了)</p>
</li>
</ul>
<p>那如何快速的上手autolayout呢? 说实话 当年ios6推出的同时新增了autolayout的特性 我看了一下官方文档和demo 就立马抛弃到一边了 因为实在过于的<code>繁琐和啰嗦</code>(有过经验的朋友肯定有同感)</p>
<p>直到iphone6发布之后 我知道使用autolayout势在必行了 这时想起了以前在浏览Github看到过的一个第三方库Masonry 在花了几个小时的研究使用后 我就将autolayout掌握了(<code>重点是我并没有学习任何的官方文档或者其他的关于autolayout的知识</code>) 这就是我为什么要写下这篇文章来推荐它的原因</p>
<h1 id="介绍">介绍</h1><p><a href="https://github.com/Masonry/Masonry" target="_blank" rel="external">Masonry 源码</a></p>
<p>Masonry是一个轻量级的布局框架 拥有自己的描述语法 采用更优雅的链式语法封装自动布局 简洁明了 并具有高可读性 <code>而且同时支持 iOS 和 Max OS X</code></p>
<a id="more"></a>
<p>我们先来看一段官方的sample code来认识一下Masonry</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[view1 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.edges</span><span class="variable">.equalTo</span>(superview)<span class="variable">.with</span><span class="variable">.insets</span>(padding);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>看到block里面的那句话: <code>make edges equalTo superview with insets</code><br>通过链式的自然语言 就把view1给autolayout好了 是不是简单易懂? </p>
<h1 id="使用">使用</h1><p>看一下Masonry支持哪一些属性</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *left;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *top;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *right;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *bottom;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *leading;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *trailing;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *width;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *height;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *centerX;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *centerY;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) MASConstraint *baseline;</span><br></pre></td></tr></table></figure>
<p>这些属性与NSLayoutAttrubute的对照表如下</p>
<table>
<thead>
<tr>
<th style="text-align:left">Masonry</th>
<th style="text-align:left">NSAutoLayout</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">left</td>
<td style="text-align:left">NSLayoutAttributeLeft</td>
<td style="text-align:left">左侧</td>
</tr>
<tr>
<td style="text-align:left">top</td>
<td style="text-align:left">NSLayoutAttributeTop</td>
<td style="text-align:left">上侧</td>
</tr>
<tr>
<td style="text-align:left">right</td>
<td style="text-align:left">NSLayoutAttributeRight</td>
<td style="text-align:left">右侧</td>
</tr>
<tr>
<td style="text-align:left">bottom</td>
<td style="text-align:left">NSLayoutAttributeBottom</td>
<td style="text-align:left">下侧</td>
</tr>
<tr>
<td style="text-align:left">leading</td>
<td style="text-align:left">NSLayoutAttributeLeading</td>
<td style="text-align:left">首部</td>
</tr>
<tr>
<td style="text-align:left">trailing</td>
<td style="text-align:left">NSLayoutAttributeTrailing</td>
<td style="text-align:left">尾部</td>
</tr>
<tr>
<td style="text-align:left">width</td>
<td style="text-align:left">NSLayoutAttributeWidth</td>
<td style="text-align:left">宽</td>
</tr>
<tr>
<td style="text-align:left">height</td>
<td style="text-align:left">NSLayoutAttributeHeight</td>
<td style="text-align:left">高</td>
</tr>
<tr>
<td style="text-align:left">centerX</td>
<td style="text-align:left">NSLayoutAttributeCenterX</td>
<td style="text-align:left">横向中点</td>
</tr>
<tr>
<td style="text-align:left">centerY</td>
<td style="text-align:left">NSLayoutAttributeCenterY</td>
<td style="text-align:left">纵向中点</td>
</tr>
<tr>
<td style="text-align:left">baseline</td>
<td style="text-align:left">NSLayoutAttributeBaseline</td>
<td style="text-align:left">文本基线</td>
</tr>
</tbody>
</table>
<p>其中leading与left  trailing与right 在正常情况下是等价的 但是当一些布局是从右至左时(比如阿拉伯文?没有类似的经验) 则会对调 换句话说就是基本可以不理不用 用left和right就好了</p>
<p>在ios8发布后 又新增了一堆奇奇怪怪的属性(有兴趣的朋友可以去瞅瞅) Masonry暂时还不支持(不过你要支持ios6,ios7 就没必要去管那么多了)</p>
<p>下面进入正题(为了方便 我们测试的superView都是一个size为(300,300)的UIView)</p>
<p>下面 通过一些简单的实例来简单介绍如何<code>轻松愉快</code>的使用Masonry:</p>
<h2 id="1-_[基础]_居中显示一个view">1. [基础] <em>居中显示一个view</em></h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view.</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *sv = [<span class="built_in">UIView</span> new];</span><br><span class="line">    [sv showPlaceHolder];</span><br><span class="line">    sv<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> blackColor];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:sv];</span><br><span class="line">    [sv mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.center</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.view</span>);</span><br><span class="line">        make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">300</span>, <span class="number">300</span>));</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout1.png" alt="代码效果"></p>
<p>使用我之间写的<a href="https://github.com/adad184/MMPlaceHolder" target="_blank" rel="external">MMPlaceHolder</a> 可以看到superview已经按照我们预期居中并且设置成了适当的大小</p>
<p>那么先看看这几行代码 </p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//从此以后基本可以抛弃CGRectMake了</span></span><br><span class="line"><span class="built_in">UIView</span> *sv = [<span class="built_in">UIView</span> new];</span><br><span class="line"></span><br><span class="line"><span class="comment">//在做autoLayout之前 一定要先将view添加到superview上 否则会报错</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> addSubview:sv];</span><br><span class="line"></span><br><span class="line"><span class="comment">//mas_makeConstraints就是Masonry的autolayout添加函数 将所需的约束添加到block中行了</span></span><br><span class="line">[sv mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将sv居中(很容易理解吧?)</span></span><br><span class="line">    make<span class="variable">.center</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.view</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将size设置成(300,300)</span></span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">300</span>, <span class="number">300</span>));</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>这里有两个问题要分解一下 </p>
<ul>
<li>首先在Masonry中能够添加autolayout约束有三个函数</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span> *)mas_makeConstraints:(<span class="keyword">void</span>(^)(MASConstraintMaker *make))block;</span><br><span class="line">- (<span class="built_in">NSArray</span> *)mas_updateConstraints:(<span class="keyword">void</span>(^)(MASConstraintMaker *make))block;</span><br><span class="line">- (<span class="built_in">NSArray</span> *)mas_remakeConstraints:(<span class="keyword">void</span>(^)(MASConstraintMaker *make))block;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line">    mas_makeConstraints 只负责新增约束 Autolayout不能同时存在两条针对于同一对象的约束 否则会报错 </span><br><span class="line">    mas_updateConstraints 针对上面的情况 会更新在block中出现的约束 不会导致出现两个相同约束的情况</span><br><span class="line">    mas_remakeConstraints 则会清除之前的所有约束 仅保留最新的约束</span><br><span class="line">    </span><br><span class="line">    三种函数善加利用 就可以应对各种情况了</span><br><span class="line">*/</span></span><br></pre></td></tr></table></figure>
<ul>
<li>其次 equalTo 和 mas_equalTo的区别在哪里呢? 其实 mas_equalTo是一个MACRO</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#define mas_equalTo(...)                 equalTo(MASBoxValue((__VA_ARGS__)))</span></span><br><span class="line"><span class="preprocessor">#define mas_greaterThanOrEqualTo(...)    greaterThanOrEqualTo(MASBoxValue((__VA_ARGS__)))</span></span><br><span class="line"><span class="preprocessor">#define mas_lessThanOrEqualTo(...)       lessThanOrEqualTo(MASBoxValue((__VA_ARGS__)))</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define mas_offset(...)                  valueOffset(MASBoxValue((__VA_ARGS__)))</span></span><br></pre></td></tr></table></figure>
<p>可以看到 mas_equalTo只是对其参数进行了一个BOX操作(装箱) MASBoxValue的定义具体可以看看源代码 太长就不贴出来了</p>
<p>所支持的类型  除了NSNumber支持的那些数值类型之外 就只支持<code>CGPoint</code> <code>CGSize</code> <code>UIEdgeInsets</code></p>
<p>介绍完这几个问题 我们就继续往下了 PS:刚才定义的sv会成为我们接下来所有sample的superView</p>
<h2 id="2-_[初级]_让一个view略小于其superView(边距为10)">2. [初级] <em>让一个view略小于其superView(边距为10)</em></h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *sv1 = [<span class="built_in">UIView</span> new];</span><br><span class="line">[sv1 showPlaceHolder];</span><br><span class="line">sv1<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">[sv addSubview:sv1];</span><br><span class="line">[sv1 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.edges</span><span class="variable">.equalTo</span>(<span class="keyword">self</span>)<span class="variable">.with</span><span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 等价于</span><br><span class="line">    make.top.equalTo(self).with.offset(10);</span><br><span class="line">    make.left.equalTo(self).with.offset(10);</span><br><span class="line">    make.bottom.equalTo(self).with.offset(-10);</span><br><span class="line">    make.right.equalTo(self).with.offset(-10);</span><br><span class="line">    */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 也等价于</span><br><span class="line">    make.top.left.bottom.and.right.equalTo(self).with.insets(UIEdgeInsetsMake(10, 10, 10, 10));</span><br><span class="line">    */</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout2.png" alt="代码效果"></p>
<p>可以看到 edges 其实就是top,left,bottom,right的一个简化 分开写也可以 一句话更省事 </p>
<p>那么为什么bottom和right里的offset是负数呢?  因为这里计算的是绝对的数值 计算的bottom需要小于sv的底部高度 所以要-10  同理用于right</p>
<p>这里有意思的地方是<code>and</code>和<code>with</code>  其实这两个函数什么事情都没做</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (MASConstraint *)with &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (MASConstraint *)and &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是用在这种链式语法中 就非常的巧妙和易懂 不得不佩服作者的心思(虽然我现在基本都会省略)</p>
<h2 id="3-_[初级]_让两个高度为150的view垂直居中且等宽且等间隔排列_间隔为10(自动计算其宽度)">3. [初级] <em>让两个高度为150的view垂直居中且等宽且等间隔排列 间隔为10(自动计算其宽度)</em></h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> padding1 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">[sv2 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.centerY</span><span class="variable">.mas_equalTo</span>(sv<span class="variable">.mas_centerY</span>);</span><br><span class="line">    make<span class="variable">.left</span><span class="variable">.equalTo</span>(sv<span class="variable">.mas_left</span>)<span class="variable">.with</span><span class="variable">.offset</span>(padding1);</span><br><span class="line">    make<span class="variable">.right</span><span class="variable">.equalTo</span>(sv3<span class="variable">.mas_left</span>)<span class="variable">.with</span><span class="variable">.offset</span>(-padding1);</span><br><span class="line">    make<span class="variable">.height</span><span class="variable">.mas_equalTo</span>(@<span class="number">150</span>);</span><br><span class="line">    make<span class="variable">.width</span><span class="variable">.equalTo</span>(sv3);</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv3 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.centerY</span><span class="variable">.mas_equalTo</span>(sv<span class="variable">.mas_centerY</span>);</span><br><span class="line">    make<span class="variable">.left</span><span class="variable">.equalTo</span>(sv2<span class="variable">.mas_right</span>)<span class="variable">.with</span><span class="variable">.offset</span>(padding1);</span><br><span class="line">    make<span class="variable">.right</span><span class="variable">.equalTo</span>(sv<span class="variable">.mas_right</span>)<span class="variable">.with</span><span class="variable">.offset</span>(-padding1);</span><br><span class="line">    make<span class="variable">.height</span><span class="variable">.mas_equalTo</span>(@<span class="number">150</span>);</span><br><span class="line">    make<span class="variable">.width</span><span class="variable">.equalTo</span>(sv2);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout3.png" alt="代码效果"></p>
<p>这里我们在两个子view之间互相设置的约束 可以看到他们的宽度在约束下自动的被计算出来了</p>
<h2 id="4-_[中级]_在UIScrollView顺序排列一些view并自动计算contentSize">4. [中级] <em>在UIScrollView顺序排列一些view并自动计算contentSize</em></h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIScrollView</span> *scrollView = [<span class="built_in">UIScrollView</span> new];</span><br><span class="line">scrollView<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">[sv addSubview:scrollView];</span><br><span class="line">[scrollView mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.edges</span><span class="variable">.equalTo</span>(sv)<span class="variable">.with</span><span class="variable">.insets</span>(<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIView</span> *container = [<span class="built_in">UIView</span> new];</span><br><span class="line">[scrollView addSubview:container];</span><br><span class="line">[container mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.edges</span><span class="variable">.equalTo</span>(scrollView);</span><br><span class="line">    make<span class="variable">.width</span><span class="variable">.equalTo</span>(scrollView);</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIView</span> *lastView = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= count ; ++i )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIView</span> *subv = [<span class="built_in">UIView</span> new];</span><br><span class="line">    [container addSubview:subv];</span><br><span class="line">    subv<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> colorWithHue:( arc4random() % <span class="number">256</span> / <span class="number">256.0</span> )</span><br><span class="line">                                      saturation:( arc4random() % <span class="number">128</span> / <span class="number">256.0</span> ) + <span class="number">0.5</span></span><br><span class="line">                                      brightness:( arc4random() % <span class="number">128</span> / <span class="number">256.0</span> ) + <span class="number">0.5</span></span><br><span class="line">                                           alpha:<span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    [subv mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.left</span><span class="variable">.and</span><span class="variable">.right</span><span class="variable">.equalTo</span>(container);</span><br><span class="line">        make<span class="variable">.height</span><span class="variable">.mas_equalTo</span>(@(<span class="number">20</span>*i));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ( lastView )</span><br><span class="line">        &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.mas_equalTo</span>(lastView<span class="variable">.mas_bottom</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.mas_equalTo</span>(container<span class="variable">.mas_top</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    lastView = subv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[container mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.bottom</span><span class="variable">.equalTo</span>(lastView<span class="variable">.mas_bottom</span>);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout4.png" alt="头部效果"><br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout5.png" alt="尾部效果"></p>
<p>从scrollView的scrollIndicator可以看出 scrollView的内部已如我们所想排列好了</p>
<p>这里的关键就在于container这个view起到了一个中间层的作用 能够自动的计算uiscrollView的contentSize</p>
<h2 id="5-_[高级]_横向或者纵向等间隙的排列一组view">5. [高级] <em>横向或者纵向等间隙的排列一组view</em></h2><p>很遗憾 autoLayout并没有直接提供等间隙排列的方法(Masonry的官方demo中也没有对应的案例) 但是参考案例3 我们可以通过一个小技巧来实现这个目的 为此我写了一个Category</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIView</span>(<span class="title">Masonry_LJC</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) distributeSpacingHorizontallyWith:(<span class="built_in">NSArray</span>*)views</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *spaces = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:views<span class="variable">.count</span>+<span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; views<span class="variable">.count</span>+<span class="number">1</span> ; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">UIView</span> *v = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [spaces addObject:v];</span><br><span class="line">        [<span class="keyword">self</span> addSubview:v];</span><br><span class="line">        </span><br><span class="line">        [v mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.width</span><span class="variable">.equalTo</span>(v<span class="variable">.mas_height</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *v0 = spaces[<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    [v0 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.left</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.mas_left</span>);</span><br><span class="line">        make<span class="variable">.centerY</span><span class="variable">.equalTo</span>(((<span class="built_in">UIView</span>*)views[<span class="number">0</span>])<span class="variable">.mas_centerY</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *lastSpace = v0;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; views<span class="variable">.count</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">UIView</span> *obj = views[i];</span><br><span class="line">        <span class="built_in">UIView</span> *space = spaces[i+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.equalTo</span>(lastSpace<span class="variable">.mas_right</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        [space mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.left</span><span class="variable">.equalTo</span>(obj<span class="variable">.mas_right</span>);</span><br><span class="line">            make<span class="variable">.centerY</span><span class="variable">.equalTo</span>(obj<span class="variable">.mas_centerY</span>);</span><br><span class="line">            make<span class="variable">.width</span><span class="variable">.equalTo</span>(v0);</span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        lastSpace = space;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [lastSpace mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.right</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.mas_right</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) distributeSpacingVerticallyWith:(<span class="built_in">NSArray</span>*)views</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *spaces = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:views<span class="variable">.count</span>+<span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; views<span class="variable">.count</span>+<span class="number">1</span> ; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">UIView</span> *v = [<span class="built_in">UIView</span> new];</span><br><span class="line">        [spaces addObject:v];</span><br><span class="line">        [<span class="keyword">self</span> addSubview:v];</span><br><span class="line">        </span><br><span class="line">        [v mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.width</span><span class="variable">.equalTo</span>(v<span class="variable">.mas_height</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *v0 = spaces[<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    [v0 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.top</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.mas_top</span>);</span><br><span class="line">        make<span class="variable">.centerX</span><span class="variable">.equalTo</span>(((<span class="built_in">UIView</span>*)views[<span class="number">0</span>])<span class="variable">.mas_centerX</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *lastSpace = v0;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; views<span class="variable">.count</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">UIView</span> *obj = views[i];</span><br><span class="line">        <span class="built_in">UIView</span> *space = spaces[i+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(lastSpace<span class="variable">.mas_bottom</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        [space mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make<span class="variable">.top</span><span class="variable">.equalTo</span>(obj<span class="variable">.mas_bottom</span>);</span><br><span class="line">            make<span class="variable">.centerX</span><span class="variable">.equalTo</span>(obj<span class="variable">.mas_centerX</span>);</span><br><span class="line">            make<span class="variable">.height</span><span class="variable">.equalTo</span>(v0);</span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        lastSpace = space;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [lastSpace mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make<span class="variable">.bottom</span><span class="variable">.equalTo</span>(<span class="keyword">self</span><span class="variable">.mas_bottom</span>);</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>简单的来测试一下</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *sv11 = [<span class="built_in">UIView</span> new];</span><br><span class="line"><span class="built_in">UIView</span> *sv12 = [<span class="built_in">UIView</span> new];</span><br><span class="line"><span class="built_in">UIView</span> *sv13 = [<span class="built_in">UIView</span> new];</span><br><span class="line"><span class="built_in">UIView</span> *sv21 = [<span class="built_in">UIView</span> new];</span><br><span class="line"><span class="built_in">UIView</span> *sv31 = [<span class="built_in">UIView</span> new];</span><br><span class="line"></span><br><span class="line">sv11<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">sv12<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">sv13<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">sv21<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">sv31<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line"></span><br><span class="line">[sv addSubview:sv11];</span><br><span class="line">[sv addSubview:sv12];</span><br><span class="line">[sv addSubview:sv13];</span><br><span class="line">[sv addSubview:sv21];</span><br><span class="line">[sv addSubview:sv31];</span><br><span class="line"></span><br><span class="line"><span class="comment">//给予不同的大小 测试效果</span></span><br><span class="line"></span><br><span class="line">[sv11 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.centerY</span><span class="variable">.equalTo</span>(@[sv12,sv13]);</span><br><span class="line">    make<span class="variable">.centerX</span><span class="variable">.equalTo</span>(@[sv21,sv31]);</span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">40</span>, <span class="number">40</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv12 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">70</span>, <span class="number">20</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv13 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">50</span>, <span class="number">50</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv21 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">50</span>, <span class="number">20</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv31 mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make<span class="variable">.size</span><span class="variable">.mas_equalTo</span>(<span class="built_in">CGSizeMake</span>(<span class="number">40</span>, <span class="number">60</span>));</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sv distributeSpacingHorizontallyWith:@[sv11,sv12,sv13]];</span><br><span class="line">[sv distributeSpacingVerticallyWith:@[sv11,sv21,sv31]];</span><br><span class="line"></span><br><span class="line">[sv showPlaceHolderWithAllSubviews];</span><br><span class="line">[sv hidePlaceHolder];</span><br></pre></td></tr></table></figure>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-09-28-use-masonry-to-quick-solve-autolayout6.png" alt="代码效果"></p>
<p>perfect! 简洁明了的达到了我们所要的效果</p>
<p>这里所用的技巧就是 使用空白的占位view来填充我们目标view的旁边 这点通过图上的空白标注可以看出来</p>
<h1 id="小结">小结</h1><p>通过以上5个案例 我觉得已经把Masonry的常用功能介绍得差不多了 以上五个例子的代码可以<a href="https://github.com/adad184/DemoMasonry" target="_blank" rel="external">在这里找到</a> 如果你觉得意犹未尽呢 请下载官方的demo来学习 </p>
<p>总而言之 Masonry是一个非常优秀的autolayout库 能够节省大量的开发和学习时间 尤其适合我这种纯代码的iOSer 在iPhone6发布后引发的适配潮中 Masonry一定可以助你一臂之力 :)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MagicNumber -&gt; autoresizingMask -&gt; autolayout</span><br></pre></td></tr></table></figure>
<p>以上是纯手写代码所经历的关于页面布局的三个时期</p>
<ul>
<li><p>在iphone1-iphone3gs时代 window的size固定为(320,480) 我们只需要简单计算一下相对位置就好了</p>
</li>
<li><p>在iphone4-iphone4s时代 苹果推出了retina屏 但是给了码农们非常大的福利:window的size不变</p>
</li>
<li><p>在iphone5-iphone5s时代 window的size变了(320,568) 这时<code>autoresizingMask</code>派上了用场(为啥这时候不用Autolayout?  因为还要支持ios5呗) 简单的适配一下即可</p>
</li>
<li><p>在iphone6+时代 window的width也发生了变化(相对5和5s的屏幕比例没有变化) 终于是时候抛弃<code>autoresizingMask</code>改用autolayout了(不用支持ios5了 相对于屏幕适配的多样性来说<code>autoresizingMask</code>也已经过时了)</p>
</li>
</ul>
<p>那如何快速的上手autolayout呢? 说实话 当年ios6推出的同时新增了autolayout的特性 我看了一下官方文档和demo 就立马抛弃到一边了 因为实在过于的<code>繁琐和啰嗦</code>(有过经验的朋友肯定有同感)</p>
<p>直到iphone6发布之后 我知道使用autolayout势在必行了 这时想起了以前在浏览Github看到过的一个第三方库Masonry 在花了几个小时的研究使用后 我就将autolayout掌握了(<code>重点是我并没有学习任何的官方文档或者其他的关于autolayout的知识</code>) 这就是我为什么要写下这篇文章来推荐它的原因</p>
<h1 id="介绍">介绍</h1><p><a href="https://github.com/Masonry/Masonry">Masonry 源码</a></p>
<p>Masonry是一个轻量级的布局框架 拥有自己的描述语法 采用更优雅的链式语法封装自动布局 简洁明了 并具有高可读性 <code>而且同时支持 iOS 和 Max OS X</code></p>]]>
    
    </summary>
    
      <category term="Autolayout" scheme="http://adad184.com/tags/Autolayout/"/>
    
      <category term="Masonry" scheme="http://adad184.com/tags/Masonry/"/>
    
      <category term="经验介绍" scheme="http://adad184.com/categories/%E7%BB%8F%E9%AA%8C%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何强制旋转屏幕]]></title>
    <link href="http://adad184.com/2014/09/19/how-to-force-rotate-screen/"/>
    <id>http://adad184.com/2014/09/19/how-to-force-rotate-screen/</id>
    <published>2014-09-19T07:17:14.000Z</published>
    <updated>2015-04-15T03:25:30.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>如果做过项目中有视频播放的内容 一定遇到过全屏播放视频的需求 一般来说 直接弹出一个modal viewcontroller来全屏播放视频就ok了  </p>
<p>但是为了用户体验 可能需要在同一个viewcontroller中进行全屏和非全屏的切换 这个时候可能就需要强制旋转屏幕来做到</p>
<p>那么如何完美的对屏幕进行强制旋转呢?</p>
<p>这里只讨论ios6+的方法(因为从ios6+起 屏幕旋转的api做了重要的变化 有需要的同学可以自己去探索一下ios6-的方法)</p>
<h1 id="研究">研究</h1><p>首先 你得在项目的的plist中或者target的general选项里配置好APP所支持的所有放心啊个</p>
<p>然后 在ios6+之后 屏幕旋转的控制权交给了rootViewController(这里没探讨presentViewController的情况 只考虑普通的布局) 那么基本上所有的APP都是基于<code>UINavigationController</code>或者<code>UITabbarViewController</code>做为rootViewController的 所以要灵活的控制每个push进来的view的旋转 需要修改一下<code>UINavigationController</code>或者<code>UITabbarViewController</code>的以下几个方法(可以添加Category 也可以继承一下)</p>
<a id="more"></a>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//UINavigationController</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.topViewController</span><span class="variable">.shouldAutorotate</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSUInteger</span>)supportedInterfaceOrientations</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.topViewController</span><span class="variable">.supportedInterfaceOrientations</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.topViewController</span><span class="variable">.preferredInterfaceOrientationForPresentation</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//UITabbarViewController</span></span><br><span class="line"><span class="comment">//注意 这里的selectedViewController如果是UINavigationController的话 也需要对它做上面的修改</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.selectedViewController</span><span class="variable">.shouldAutorotate</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSUInteger</span>)supportedInterfaceOrientations</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.selectedViewController</span><span class="variable">.supportedInterfaceOrientations</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.selectedViewController</span><span class="variable">.preferredInterfaceOrientationForPresentation</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样 控制旋转的主动权就交还到了每个viewController的手上了</p>
<h1 id="方法">方法</h1><p>在ios6中 使用如下的trick可以强制让屏幕进行旋转检测</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">UIViewController</span> *vc = [[<span class="built_in">UIViewController</span> alloc]init];</span><br><span class="line">[<span class="keyword">self</span> presentModalViewController:vc animated:<span class="literal">NO</span>];</span><br><span class="line">[<span class="keyword">self</span> dismissModalViewControllerAnimated:<span class="literal">NO</span>];</span><br></pre></td></tr></table></figure>
<p>在ios7中 上面的方法不管用了  但是稍微改一改就可以了</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   <span class="built_in">UIViewController</span> *vc  = [[<span class="built_in">UIViewController</span> alloc] init];</span><br><span class="line">[<span class="keyword">self</span> presentViewController:viewController animated:<span class="literal">NO</span> completion:^&#123;</span><br><span class="line">   	[<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">NO</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>虽然上面的办法确实可以触发对屏幕旋转的判断 但缺陷就是旋转起来不自然</p>
<p>实际上有个更好的方法 </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   [[UIDevice currentDevice] setValue:&#10;    [NSNumber numberWithInteger: self.isFullScreen?UIInterfaceOrientationLandscapeRight:UIInterfaceOrientationPortrait]&#10;                               forKey:@&#34;orientation&#34;];&#10;                               &#10;//&#31561;&#20215;&#20110;&#10;objc_msgSend([UIDevice currentDevice], @selector(setOrientation:), self.isFullScreen?UIInterfaceOrientationLandscapeRight:UIInterfaceOrientationPortrait);</span><br></pre></td></tr></table></figure>
<p>在stackoverflow上看到有人说 此方法是私有方法 调用有可能会导致被reject</p>
<p>但是<strong><code>亲测上架无碍</code></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>如果做过项目中有视频播放的内容 一定遇到过全屏播放视频的需求 一般来说 直接弹出一个modal viewcontroller来全屏播放视频就ok了  </p>
<p>但是为了用户体验 可能需要在同一个viewcontroller中进行全屏和非全屏的切换 这个时候可能就需要强制旋转屏幕来做到</p>
<p>那么如何完美的对屏幕进行强制旋转呢?</p>
<p>这里只讨论ios6+的方法(因为从ios6+起 屏幕旋转的api做了重要的变化 有需要的同学可以自己去探索一下ios6-的方法)</p>
<h1 id="研究">研究</h1><p>首先 你得在项目的的plist中或者target的general选项里配置好APP所支持的所有放心啊个</p>
<p>然后 在ios6+之后 屏幕旋转的控制权交给了rootViewController(这里没探讨presentViewController的情况 只考虑普通的布局) 那么基本上所有的APP都是基于<code>UINavigationController</code>或者<code>UITabbarViewController</code>做为rootViewController的 所以要灵活的控制每个push进来的view的旋转 需要修改一下<code>UINavigationController</code>或者<code>UITabbarViewController</code>的以下几个方法(可以添加Category 也可以继承一下)</p>]]>
    
    </summary>
    
      <category term="rotate" scheme="http://adad184.com/tags/rotate/"/>
    
      <category term="screen" scheme="http://adad184.com/tags/screen/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[支付宝iOS SDK的那些坑(系统繁忙，请稍后再试)]]></title>
    <link href="http://adad184.com/2014/08/27/alipay-sdk-sucks/"/>
    <id>http://adad184.com/2014/08/27/alipay-sdk-sucks/</id>
    <published>2014-08-27T08:39:45.000Z</published>
    <updated>2015-04-15T11:57:46.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>支付宝的iOS SDK真是个奇葩的存在 按理说这么重要的SDK 理应提供详尽的文档和技术支持(虽然说实际使用较简单)<br>但是跑到<a href="http://club.alipay.com/thread-htm-fid-703-page-6.html" target="_blank" rel="external">官方论坛</a>一看 都是各种各样的问题 以及千篇一律的解答</p>
<p>这里不谈如何集成和使用SDK 只谈问题 如果你按照官方文档一步一步的调试发现任何问题没有 那么 恭喜你 运气不错</p>
<p>如果你跟我一样 遇到跳转支付时现实”系统繁忙,请稍后再试” 的问题(如图 没截到iOS的 找了一张android的图凑数)</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-27-alipay-sdk-sucks.png" alt="问题截图"></p>
<a id="more"></a>
<h1 id="问题">问题</h1><p>官方示例中支付相关的代码</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造订单</span></span><br><span class="line"><span class="built_in">NSString</span> *appScheme = <span class="string">@"AlipaySdkDemo"</span>;</span><br><span class="line"><span class="built_in">NSString</span>* orderInfo = [<span class="keyword">self</span> getOrderInfo:indexPath<span class="variable">.row</span>];</span><br><span class="line"><span class="built_in">NSString</span>* signedStr = [<span class="keyword">self</span> doRsa:orderInfo];</span><br><span class="line"></span><br><span class="line"><span class="comment">//形成订单参数</span></span><br><span class="line"><span class="built_in">NSString</span> *orderString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@&amp;sign=\"%@\"&amp;sign_type=\"%@\""</span>,</span><br><span class="line">                         orderInfo, signedStr, <span class="string">@"RSA"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用支付借口</span></span><br><span class="line">[AlixLibService payOrder:orderString AndScheme:appScheme seletor:_result target:<span class="keyword">self</span>];</span><br></pre></td></tr></table></figure>
<p>问题就出在<code>orderInfo</code>这里 那么<code>orderInfo</code>是什么呢?</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-(<span class="built_in">NSString</span>*)getOrderInfo:(<span class="built_in">NSInteger</span>)index</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     *点击获取prodcut实例并初始化订单信息</span><br><span class="line">     */</span></span><br><span class="line">    Product *product = [_products objectAtIndex:index];    </span><br><span class="line">    AlixPayOrder *order = [[AlixPayOrder alloc] init];</span><br><span class="line">    order<span class="variable">.partner</span> = PartnerID;</span><br><span class="line">    order<span class="variable">.seller</span> = SellerID;</span><br><span class="line"></span><br><span class="line">    order<span class="variable">.tradeNO</span> = [<span class="keyword">self</span> generateTradeNO]; <span class="comment">//订单ID（由商家自行制定）</span></span><br><span class="line">    order<span class="variable">.productName</span> = product<span class="variable">.subject</span>; <span class="comment">//商品标题</span></span><br><span class="line">    order<span class="variable">.productDescription</span> = product<span class="variable">.body</span>; <span class="comment">//商品描述</span></span><br><span class="line">    order<span class="variable">.amount</span> = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.2f"</span>,product<span class="variable">.price</span>]; <span class="comment">//商品价格</span></span><br><span class="line">    order<span class="variable">.notifyURL</span> =  <span class="string">@"http%3A%2F%2Fwwww.xxx.com"</span>; <span class="comment">//回调URL</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [order description];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以到看<code>orderInfo</code>就是<code>AlixPayOrder</code>的字符串化 再看看其description函数<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)description &#123;</span><br><span class="line">    <span class="built_in">NSMutableString</span> * discription = [<span class="built_in">NSMutableString</span> string];</span><br><span class="line">    [discription appendFormat:<span class="string">@"partner=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.partner</span> ? <span class="keyword">self</span><span class="variable">.partner</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;seller_id=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.seller</span> ? <span class="keyword">self</span><span class="variable">.seller</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;out_trade_no=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.tradeNO</span> ? <span class="keyword">self</span><span class="variable">.tradeNO</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;subject=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.productName</span> ? <span class="keyword">self</span><span class="variable">.productName</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;body=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.productDescription</span> ? <span class="keyword">self</span><span class="variable">.productDescription</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;total_fee=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.amount</span> ? <span class="keyword">self</span><span class="variable">.amount</span> : <span class="string">@""</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;notify_url=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.notifyURL</span> ? <span class="keyword">self</span><span class="variable">.notifyURL</span> : <span class="string">@""</span>];</span><br><span class="line">    </span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;service=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.serviceName</span> ? <span class="keyword">self</span><span class="variable">.serviceName</span> : <span class="string">@"mobile.securitypay.pay"</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;_input_charset=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.inputCharset</span> ? <span class="keyword">self</span><span class="variable">.inputCharset</span> : <span class="string">@"utf-8"</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;payment_type=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.paymentType</span> ? <span class="keyword">self</span><span class="variable">.paymentType</span> : <span class="string">@"1"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面的这些参数，如果没有必要（value为空），则无需添加</span></span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;return_url=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.returnUrl</span> ? <span class="keyword">self</span><span class="variable">.returnUrl</span> : <span class="string">@"www.xxx.com"</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;it_b_pay=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.itBPay</span> ? <span class="keyword">self</span><span class="variable">.itBPay</span> : <span class="string">@"1d"</span>];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;show_url=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.showUrl</span> ? <span class="keyword">self</span><span class="variable">.showUrl</span> : <span class="string">@"www.xxx.com"</span>];</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> * key <span class="keyword">in</span> [<span class="keyword">self</span><span class="variable">.extraParams</span> allKeys]) &#123;</span><br><span class="line">        [discription appendFormat:<span class="string">@"&amp;%@=\"%@\""</span>, key, [<span class="keyword">self</span><span class="variable">.extraParams</span> objectForKey:key]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> discription;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>我猜问题可能出现在这里<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[discription appendFormat:<span class="string">@"&amp;return_url=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.returnUrl</span> ? <span class="keyword">self</span><span class="variable">.returnUrl</span> : <span class="string">@"www.xxx.com"</span>];</span><br><span class="line">[discription appendFormat:<span class="string">@"&amp;it_b_pay=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.itBPay</span> ? <span class="keyword">self</span><span class="variable">.itBPay</span> : <span class="string">@"1d"</span>];</span><br><span class="line">[discription appendFormat:<span class="string">@"&amp;show_url=\"%@\""</span>, <span class="keyword">self</span><span class="variable">.showUrl</span> ? <span class="keyword">self</span><span class="variable">.showUrl</span> : <span class="string">@"www.xxx.com"</span>];</span><br></pre></td></tr></table></figure></p>
<p>可能是这种莫名其妙的默认值导致了问题的出现(代码里注释了无需添加 可为啥官方demo是没有问题的?)<br><code>orderInfo</code>也不过是一堆参数的拼凑而已 同时 我求证了同事在android的sdk里 参数也都是手工拼凑的 那么将必填参数自行组织一下 应该就可以了</p>
<h1 id="方案">方案</h1><p>经过实践 只需要填下下面出现的这些参数 就没有问题了</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-(<span class="built_in">NSString</span>*)getOrderInfo</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableString</span> * discription = [<span class="built_in">NSMutableString</span> string] ;</span><br><span class="line">    [discription appendFormat:<span class="string">@"partner=\"%@\""</span>, PartnerID];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;seller_id=\"%@\""</span>, SellerID];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;out_trade_no=\"%@\""</span>, [<span class="keyword">self</span> getOrderID]];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;subject=\"%@\""</span>, yourSubject];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;body=\"%@\""</span>, yourBody];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;total_fee=\"%@\""</span>, yourPrice];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;notify_url=\"%@\""</span>, yourHandleAction];</span><br><span class="line">    [discription appendFormat:<span class="string">@"&amp;service=\"%@\""</span>, <span class="string">@"mobile.securitypay.pay"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> discription;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="尾声">尾声</h1><p>当然 回过头来看 问题有这么几个</p>
<ul>
<li>官方demo写得不严谨 且注释太少</li>
<li>官方文档写没有指出相关问题 以及对相应参数的解释(对于参数,仅提到了一句”<strong>支付参数提交时,需要组装订单信息 orderInfo,其中 参数以 key=”value”形式呈现,参数之间以“&amp;”分割, 获取 Alipay 支付对象调用支付。</strong>“”)</li>
<li>官方论坛没有相应的技术支持</li>
</ul>
<p>结论就是: 坑爹</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>支付宝的iOS SDK真是个奇葩的存在 按理说这么重要的SDK 理应提供详尽的文档和技术支持(虽然说实际使用较简单)<br>但是跑到<a href="http://club.alipay.com/thread-htm-fid-703-page-6.html">官方论坛</a>一看 都是各种各样的问题 以及千篇一律的解答</p>
<p>这里不谈如何集成和使用SDK 只谈问题 如果你按照官方文档一步一步的调试发现任何问题没有 那么 恭喜你 运气不错</p>
<p>如果你跟我一样 遇到跳转支付时现实”系统繁忙,请稍后再试” 的问题(如图 没截到iOS的 找了一张android的图凑数)</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-27-alipay-sdk-sucks.png" alt="问题截图"></p>]]>
    
    </summary>
    
      <category term="aliplay" scheme="http://adad184.com/tags/aliplay/"/>
    
      <category term="payment" scheme="http://adad184.com/tags/payment/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hello my baby]]></title>
    <link href="http://adad184.com/2014/08/27/hello-my-baby/"/>
    <id>http://adad184.com/2014/08/27/hello-my-baby/</id>
    <published>2014-08-27T08:21:14.000Z</published>
    <updated>2015-04-15T03:06:50.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-27-hello-my-baby.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-27-hello-my-baby.png" alt=""></p>
]]>
    </summary>
    
      <category term="family" scheme="http://adad184.com/tags/family/"/>
    
      <category term="生活琐碎" scheme="http://adad184.com/categories/%E7%94%9F%E6%B4%BB%E7%90%90%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何快速的删除mac上imessage里的(垃圾)信息]]></title>
    <link href="http://adad184.com/2014/08/26/ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi/"/>
    <id>http://adad184.com/2014/08/26/ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi/</id>
    <published>2014-08-26T00:51:34.000Z</published>
    <updated>2015-04-15T11:58:14.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>imessage现在处于一个非常鸡肋的状态 开了无用 关了可惜 而且貌似跟中国的运营商还有点点冲突(经常各种群发短信的时候夹杂着imessage 对方就收不到) </p>
<p>当然有垃圾就要清除 手机上还好 看到了顺手左划就删掉了 但是倒霉的是在mac不会同步被删除 而且万一你从没没用过mac上的<code>Messages</code>这个服务 赶紧去点开 有惊喜</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-26-ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi2.png" alt="imessage"></p>
<p>恩 是的 你肯定发现这个东东已经成了各种小广告的垃圾场</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-26-ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi.png" alt="imessage"></p>
<p>ok 是时候准备删除了(强迫症你别理我) 于是 点X - 确认删除 - 点X - 确认删除 …… 当重复了十几遍以后 你会觉得这样太煞笔了 这几百条的垃圾 删除到什么时候去?  shift批量选择? 你试试支持么(这个特性不支持确实有点不合理)</p>
<p>那么如何快速的删除imessage里的信息呢?</p>
<a id="more"></a>
<h1 id="方法">方法</h1><ul>
<li>方法一 快速删除单条记录</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">组合键 option+command+delete(大的那个 小键盘不管用)</span><br></pre></td></tr></table></figure>
<p>这样可以快速的删除单挑 好处是可以选择要保留的</p>
<ul>
<li>方法二 快速清空所有记录</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">退出messages应用</span><br><span class="line">rm -r ~/Library/Messages/chat.*</span><br><span class="line">重启messages</span><br></pre></td></tr></table></figure>
<p>据说这个方法可以清空所有信息 但是由于我测试的时候没有推出messages就直接删除文件了 导致我重启了以后所有信息都还在(汗 这是为什么 明明文件删除了) 所以我不确定这个方法是否在10.9上面还有效</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>imessage现在处于一个非常鸡肋的状态 开了无用 关了可惜 而且貌似跟中国的运营商还有点点冲突(经常各种群发短信的时候夹杂着imessage 对方就收不到) </p>
<p>当然有垃圾就要清除 手机上还好 看到了顺手左划就删掉了 但是倒霉的是在mac不会同步被删除 而且万一你从没没用过mac上的<code>Messages</code>这个服务 赶紧去点开 有惊喜</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-26-ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi2.png" alt="imessage"></p>
<p>恩 是的 你肯定发现这个东东已经成了各种小广告的垃圾场</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-26-ru-he-kuai-su-de-shan-chu-imessageli-de-xin-xi.png" alt="imessage"></p>
<p>ok 是时候准备删除了(强迫症你别理我) 于是 点X - 确认删除 - 点X - 确认删除 …… 当重复了十几遍以后 你会觉得这样太煞笔了 这几百条的垃圾 删除到什么时候去?  shift批量选择? 你试试支持么(这个特性不支持确实有点不合理)</p>
<p>那么如何快速的删除imessage里的信息呢?</p>]]>
    
    </summary>
    
      <category term="imessage" scheme="http://adad184.com/tags/imessage/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开源项目:MMPlaceHolder]]></title>
    <link href="http://adad184.com/2014/08/21/kai-yuan-xiang-mu-mmplaceholder/"/>
    <id>http://adad184.com/2014/08/21/kai-yuan-xiang-mu-mmplaceholder/</id>
    <published>2014-08-21T04:17:14.000Z</published>
    <updated>2015-04-15T11:59:06.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>最近在做一个新的项目 免不了又要跟UI打交道 之前N多的经验告诉我 为了达到设计图上的100%Copy 避免不了在切图的<code>尺寸</code>和<code>位置</code>上花大量的时间 (为什么不按美术切给你的尺寸来? 这… 只能说美术很难跟我达到天人合一… ( ͡° ͜ʖ ͡°)</p>
<p>那么能不能以实际的效果告诉设计师尺寸和位置呢?  如下面这样就皆大欢喜啦</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-21-kai-yuan-xiang-mu-mmplaceholder-1.png" alt="效果"></p>
<p>当然 很早之前就已经有前人做过这种事情了 比如</p>
<a id="more"></a>
<p><a href="https://github.com/dhennessy/PAPlaceholder" target="_blank" rel="external">PAPlaceholder</a><br><a href="https://github.com/midnightSuyama/Masu" target="_blank" rel="external">Masu</a></p>
<p>但是呢 共同的特点就是<code>难用</code>(怎么难用? 可以自己看一下他们的文档)</p>
<p>所以呢 处于好玩的目的 就自己写了一个简单易用的版本(怎么简单? 一行代码就搞定啦)</p>
<h1 id="介绍">介绍</h1><p><a href="https://github.com/adad184/MMPlaceHolder" target="_blank" rel="external">MMPlaceHolder</a></p>
<ul>
<li>一行代码解决显示问题 简单易用</li>
<li>搭建码农和设计之间的沟通桥梁 减少沟通成本(Talk is cheap. Show me the code.)</li>
<li>显示大小自适应(最小支持30*30哦)</li>
</ul>
<h1 id="使用">使用</h1><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)showPlaceHolder;</span><br><span class="line">- (<span class="keyword">void</span>)showPlaceHolderWithLineColor:(<span class="built_in">UIColor</span>*)lineColor;</span><br><span class="line">- (<span class="keyword">void</span>)showPlaceHolderWithLineColor:(<span class="built_in">UIColor</span>*)lineColor backColor:(<span class="built_in">UIColor</span>*)backColor;</span><br><span class="line">- (<span class="keyword">void</span>)showPlaceHolderWithLineColor:(<span class="built_in">UIColor</span>*)lineColor backColor:(<span class="built_in">UIColor</span>*)backColor arrowSize:(<span class="built_in">CGFloat</span>)arrowSize;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)hidePlaceHolder;</span><br><span class="line">- (M<span class="built_in">MPlaceHolder</span> *)getPlaceHolder;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>最近在做一个新的项目 免不了又要跟UI打交道 之前N多的经验告诉我 为了达到设计图上的100%Copy 避免不了在切图的<code>尺寸</code>和<code>位置</code>上花大量的时间 (为什么不按美术切给你的尺寸来? 这… 只能说美术很难跟我达到天人合一… ( ͡° ͜ʖ ͡°)</p>
<p>那么能不能以实际的效果告诉设计师尺寸和位置呢?  如下面这样就皆大欢喜啦</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2014-08-21-kai-yuan-xiang-mu-mmplaceholder-1.png" alt="效果"></p>
<p>当然 很早之前就已经有前人做过这种事情了 比如</p>]]>
    
    </summary>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="开源项目" scheme="http://adad184.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开源项目:MMSpinImageView 用于360度显示环拍物体]]></title>
    <link href="http://adad184.com/2014/01/31/kai-yuan-xiang-mu-mmspinimageview-yong-yu-360-du-xian-shi-huan-pai-wu-ti/"/>
    <id>http://adad184.com/2014/01/31/kai-yuan-xiang-mu-mmspinimageview-yong-yu-360-du-xian-shi-huan-pai-wu-ti/</id>
    <published>2014-01-31T05:24:53.000Z</published>
    <updated>2015-04-15T11:59:28.000Z</updated>
    <content type="html"><![CDATA[<p>在Github上开源了一个小玩意 <a href="https://github.com/adad184/MMSpinImageView" target="_blank" rel="external">MMSpinImageView</a></p>
<p>使用方法 可以用Delegate的方式,也可以直接设置一个包含UIImage的NSArray,或者直接从ZIP包里读取(需要其他类库支持)</p>
<p>第一版本很简单 基于UIImageView来显示图片 如果有性能问题 会考虑用绘制的方法来实现</p>
<p><img src="https://github.com/adad184/MMSpinImageView/blob/master/Image/demo.gif?raw=true" alt="demo"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在Github上开源了一个小玩意 <a href="https://github.com/adad184/MMSpinImageView" target="_blank" rel="external">MMSpinImageView</a></p>
<p>使用方法 可以用D]]>
    </summary>
    
      <category term="opensource" scheme="http://adad184.com/tags/opensource/"/>
    
      <category term="开源项目" scheme="http://adad184.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决表单被键盘遮住的问题(续)]]></title>
    <link href="http://adad184.com/2013/12/19/jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti-xu/"/>
    <id>http://adad184.com/2013/12/19/jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti-xu/</id>
    <published>2013-12-19T08:31:34.000Z</published>
    <updated>2015-04-15T03:26:51.000Z</updated>
    <content type="html"><![CDATA[<p>刚才检查代码的时候 发现了之前代码的一些问题 这里做一下修正 为此我为UIView和UITableView各新增了一个Category方法</p>
<figure class="highlight objc"><figcaption><span>UIView的Category</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>) haveSubview:(<span class="built_in">UIView</span>*)subView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIView</span> *v = subView;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">self</span> == v )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        v = v<span class="variable">.superview</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight objc"><figcaption><span>UITableVIew的Category方法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>) haveSubview:(<span class="built_in">UIView</span>*)subView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( v &amp;&amp; [<span class="keyword">self</span> haveSubview:v] )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> ( v &amp;&amp; ![[v class] isSubclassOfClass:[<span class="built_in">UITableViewCell</span> class]]) &#123;</span><br><span class="line">            v = v<span class="variable">.superview</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ( v )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,<span class="built_in">NSStringFromClass</span>(v<span class="variable">.class</span>));</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">UITableViewCell</span> *cell = (<span class="built_in">UITableViewCell</span>*)v;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,[<span class="keyword">self</span> indexPathForCell:cell]);</span><br><span class="line">            </span><br><span class="line">            [<span class="keyword">self</span> scrollToRowAtIndexPath:[<span class="keyword">self</span> indexPathForRowAtPoint:cell<span class="variable">.center</span>] atScrollPosition:<span class="built_in">UITableViewScrollPositionBottom</span> animated:<span class="literal">YES</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样 当我们需要处理弹出键盘时 就只需要如此调用就可以了</p>
<figure class="highlight objc"><figcaption><span>调用方法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *v = [<span class="built_in">UIResponder</span> currentFirstResponder];</span><br><span class="line">[<span class="keyword">self</span><span class="variable">.tableView</span> scrollToView:v];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚才检查代码的时候 发现了之前代码的一些问题 这里做一下修正 为此我为UIView和UITableView各新增了一个Category方法</p>
<figure class="highlight objc"><figcaption><span>UIView的Category</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>) haveSubview:(<span class="built_in">UIView</span>*)subView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIView</span> *v = subView;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">self</span> == v )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        v = v<span class="variable">.superview</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="form" scheme="http://adad184.com/tags/form/"/>
    
      <category term="keyboard" scheme="http://adad184.com/tags/keyboard/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[完美解决 interactivePopGestureRecognizer 卡住的问题]]></title>
    <link href="http://adad184.com/2013/12/12/wan-mei-jie-jue-interactivepopgesturerecognizer-qia-zhu-de-wen-ti/"/>
    <id>http://adad184.com/2013/12/12/wan-mei-jie-jue-interactivepopgesturerecognizer-qia-zhu-de-wen-ti/</id>
    <published>2013-12-12T08:19:10.000Z</published>
    <updated>2015-04-15T03:26:54.000Z</updated>
    <content type="html"><![CDATA[<p><code>interactivePopGestureRecognizer</code>是iOS7推出的解决<code>VeiwController</code>滑动后退的新功能,虽然很实用,但是坑也很多啊,用过的同学肯定知道问题在哪里,所以具体问题我就不描述了,这里只给出如何完美解决<code>interactivePopGestureRecognizer</code>卡住的问题.</p>
<p>当然我们要自定义UINavigationController来解决这个问题:</p>
<a id="more"></a>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#import <span class="title">"MMNavController.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MMNavController</span> ()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MMNavController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">id</span>)initWithRootViewController:(<span class="built_in">UIViewController</span> *)rootViewController</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithRootViewController:rootViewController];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="comment">// Custom initialization</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> MMNavController *weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span> respondsToSelector:<span class="keyword">@selector</span>(interactivePopGestureRecognizer)])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span><span class="variable">.delegate</span> = weakSelf;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.delegate</span> = weakSelf;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)pushViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( [<span class="keyword">self</span> respondsToSelector:<span class="keyword">@selector</span>(interactivePopGestureRecognizer)] &amp;&amp; animated == <span class="literal">YES</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span><span class="variable">.enabled</span> = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> pushViewController:viewController animated:animated];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span> *)popToRootViewControllerAnimated:(<span class="built_in">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( [<span class="keyword">self</span> respondsToSelector:<span class="keyword">@selector</span>(interactivePopGestureRecognizer)] &amp;&amp; animated == <span class="literal">YES</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span><span class="variable">.enabled</span> = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>  [<span class="keyword">super</span> popToRootViewControllerAnimated:animated];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span> *)popToViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( [<span class="keyword">self</span> respondsToSelector:<span class="keyword">@selector</span>(interactivePopGestureRecognizer)] )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span><span class="variable">.enabled</span> = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">super</span> popToViewController:viewController animated:animated];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#pragma mark UINavigationControllerDelegate</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)navigationController:(<span class="built_in">UINavigationController</span> *)navigationController</span><br><span class="line">       didShowViewController:(<span class="built_in">UIViewController</span> *)viewController</span><br><span class="line">                    animated:(<span class="built_in">BOOL</span>)animate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span> respondsToSelector:<span class="keyword">@selector</span>(interactivePopGestureRecognizer)])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span><span class="variable">.enabled</span> = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-(<span class="built_in">BOOL</span>)gestureRecognizerShouldBegin:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( gestureRecognizer == <span class="keyword">self</span><span class="variable">.interactivePopGestureRecognizer</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">self</span><span class="variable">.viewControllers</span><span class="variable">.count</span> &lt; <span class="number">2</span> || <span class="keyword">self</span><span class="variable">.visibleViewController</span> == [<span class="keyword">self</span><span class="variable">.viewControllers</span> objectAtIndex:<span class="number">0</span>] )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><code>interactivePopGestureRecognizer</code>是iOS7推出的解决<code>VeiwController</code>滑动后退的新功能,虽然很实用,但是坑也很多啊,用过的同学肯定知道问题在哪里,所以具体问题我就不描述了,这里只给出如何完美解决<code>interactivePopGestureRecognizer</code>卡住的问题.</p>
<p>当然我们要自定义UINavigationController来解决这个问题:</p>]]>
    
    </summary>
    
      <category term="gesture" scheme="http://adad184.com/tags/gesture/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决表单被键盘遮住的问题]]></title>
    <link href="http://adad184.com/2013/11/11/jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti/"/>
    <id>http://adad184.com/2013/11/11/jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti/</id>
    <published>2013-11-11T03:01:59.000Z</published>
    <updated>2015-04-15T11:59:56.000Z</updated>
    <content type="html"><![CDATA[<h1 id="问题">问题</h1><p>处理表单的时候,一定会碰到的就是输入控件被键盘遮住的问题,如图:</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-11-jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti1.png" alt="实例"></p>
<p>左边是普通表单,中间是2B表单,右边是文艺表单.</p>
<h1 id="分析">分析</h1><p>处理这种问题无非就是2个步骤:</p>
<ol>
<li>键盘弹出时,缩小<code>UITableView</code>的<code>frame</code></li>
<li>滚动<code>UITableView</code>,让当前输入的控件可见</li>
</ol>
<p>代码写出来就是这几步</p>
<ol>
<li>捕获键盘事件</li>
<li>计算键盘高度并调整<code>UITableView</code>的<code>frame</code></li>
<li>获取当前正在输入的控件</li>
<li>计算其在<code>UITableView</code>中的位置,并滚动到其位置让其可见</li>
</ol>
<p>那么如何一步一步的来实现这些步骤呢?</p>
<a id="more"></a>
<h2 id="捕获键盘事件">捕获键盘事件</h2><figure class="highlight objc"><figcaption><span>捕获键盘事件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                         selector:<span class="keyword">@selector</span>(actionKeyboardShow:)</span><br><span class="line">                                             name:<span class="built_in">UIKeyboardDidShowNotification</span></span><br><span class="line">                                           object:<span class="literal">nil</span>];</span><br><span class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                         selector:<span class="keyword">@selector</span>(actionKeyboardHide:)</span><br><span class="line">                                             name:<span class="built_in">UIKeyboardWillHideNotification</span></span><br><span class="line">                                           object:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)actionKeyboardShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidShowNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                             selector:<span class="keyword">@selector</span>(actionKeyboardShow:)</span><br><span class="line">                                                 name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span></span><br><span class="line">                                               object:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)actionKeyboardHide:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                             selector:<span class="keyword">@selector</span>(actionKeyboardShow:)</span><br><span class="line">                                                 name:<span class="built_in">UIKeyboardDidShowNotification</span></span><br><span class="line">                                               object:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="计算键盘高度并调整UITableView的frame">计算键盘高度并调整<code>UITableView</code>的<code>frame</code></h2><figure class="highlight objc"><figcaption><span>计算键盘高度并调整UITableView的frame</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)actionKeyboardShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGSize</span> keyboardSize = [[[notification userInfo] objectForKey:<span class="built_in">UIKeyboardFrameEndUserInfoKey</span>] <span class="built_in">CGRectValue</span>]<span class="variable">.size</span></span><br><span class="line">    <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.frame</span> = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="keyword">self</span><span class="variable">.view</span><span class="variable">.h</span>-keyboardSize<span class="variable">.height</span>);</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidShowNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                             selector:<span class="keyword">@selector</span>(actionKeyboardShow:)</span><br><span class="line">                                                 name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span></span><br><span class="line">                                               object:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前正在输入的控件">获取当前正在输入的控件</h2><p>这里得说一句,普通程序员一般是这样来获取的</p>
<figure class="highlight objc"><figcaption><span>UIView的Category</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIView</span> *) getFirstResponder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span><span class="variable">.isFirstResponder</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span> *subView <span class="keyword">in</span> <span class="keyword">self</span><span class="variable">.subviews</span>) &#123;</span><br><span class="line">        <span class="built_in">UIView</span> *firstResponder = [subView getFirstResponder];</span><br><span class="line">        <span class="keyword">if</span> (firstResponder != <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> firstResponder;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>虽然没错,但是文艺程序员应该<a href="http://stackoverflow.com/questions/5029267/is-there-any-way-of-asking-an-ios-view-which-of-its-children-has-first-responder/14135456#14135456" target="_blank" rel="external">这样来获取</a></p>
<figure class="highlight objc"><figcaption><span>UIResponder的Category</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> __<span class="keyword">weak</span> <span class="keyword">id</span> currentFirstResponder;</span><br><span class="line"></span><br><span class="line">+(<span class="keyword">id</span>)currentFirstResponder &#123;</span><br><span class="line">    currentFirstResponder = <span class="literal">nil</span>;</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] sendAction:<span class="keyword">@selector</span>(findFirstResponder:) to:<span class="literal">nil</span> from:<span class="literal">nil</span> forEvent:<span class="literal">nil</span>];</span><br><span class="line">    <span class="keyword">return</span> currentFirstResponder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)findFirstResponder:(<span class="keyword">id</span>)sender &#123;</span><br><span class="line">    currentFirstResponder = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同理,有时候我们需要让键盘消失,那么也有三种做法可以选择</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[someView resignFirstResponder];</span><br><span class="line"></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> endEditing:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] sendAction:<span class="keyword">@selector</span>(resignFirstResponder) to:<span class="literal">nil</span> from:<span class="literal">nil</span> forEvent:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure>
<p>如何选择呢? It’s up to U.</p>
<h2 id="计算其在UITableView中的位置,并滚动到其位置让其可见">计算其在<code>UITableView</code>中的位置,并滚动到其位置让其可见</h2><figure class="highlight objc"><figcaption><span>计算其在UITableView中的位置,并滚动到其位置让其可见</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)actionKeyboardShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGSize</span> keyboardSize = [[[notification userInfo] objectForKey:<span class="built_in">UIKeyboardFrameEndUserInfoKey</span>] <span class="built_in">CGRectValue</span>]<span class="variable">.size</span>;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.frame</span> = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="keyword">self</span><span class="variable">.view</span><span class="variable">.h</span>-keyboardSize<span class="variable">.height</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *v = [<span class="built_in">UIResponder</span> currentFirstResponder];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( v )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> ( ![v isKindOfClass:[<span class="built_in">UITableViewCell</span> class]]) &#123;</span><br><span class="line">            v = v<span class="variable">.superview</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UITableViewCell</span> *cell = (<span class="built_in">UITableViewCell</span>*)v;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.tableView</span> scrollToRowAtIndexPath:[<span class="keyword">self</span><span class="variable">.tableView</span> indexPathForRowAtPoint:cell<span class="variable">.center</span>] atScrollPosition:<span class="built_in">UITableViewScrollPositionBottom</span> animated:<span class="literal">YES</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidShowNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span></span><br><span class="line">                                             selector:<span class="keyword">@selector</span>(actionKeyboardShow:)</span><br><span class="line">                                                 name:<span class="built_in">UIKeyboardDidChangeFrameNotification</span></span><br><span class="line">                                               object:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="问题">问题</h1><p>处理表单的时候,一定会碰到的就是输入控件被键盘遮住的问题,如图:</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-11-jie-jue-biao-dan-bei-jian-pan-zhe-zhu-de-wen-ti1.png" alt="实例"></p>
<p>左边是普通表单,中间是2B表单,右边是文艺表单.</p>
<h1 id="分析">分析</h1><p>处理这种问题无非就是2个步骤:</p>
<ol>
<li>键盘弹出时,缩小<code>UITableView</code>的<code>frame</code></li>
<li>滚动<code>UITableView</code>,让当前输入的控件可见</li>
</ol>
<p>代码写出来就是这几步</p>
<ol>
<li>捕获键盘事件</li>
<li>计算键盘高度并调整<code>UITableView</code>的<code>frame</code></li>
<li>获取当前正在输入的控件</li>
<li>计算其在<code>UITableView</code>中的位置,并滚动到其位置让其可见</li>
</ol>
<p>那么如何一步一步的来实现这些步骤呢?</p>]]>
    
    </summary>
    
      <category term="keyboard" scheme="http://adad184.com/tags/keyboard/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何从多重 modalViewController 中直接返回最底层]]></title>
    <link href="http://adad184.com/2013/10/10/ru-he-cong-duo-zhong-modalviewcontroller-zhong-zhi-jie-fan-hui-zui-di-ceng/"/>
    <id>http://adad184.com/2013/10/10/ru-he-cong-duo-zhong-modalviewcontroller-zhong-zhi-jie-fan-hui-zui-di-ceng/</id>
    <published>2013-10-10T06:59:58.000Z</published>
    <updated>2015-04-15T03:27:12.000Z</updated>
    <content type="html"><![CDATA[<p><code>ModalViewController</code>是经常会用到的展现<code>ViewController</code>的方式,而显示和收起<code>ModalViewController</code>也是很简单的</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)presentViewController:(<span class="built_in">UIViewController</span> *)viewControllerToPresent animated: (<span class="built_in">BOOL</span>)flag completion:(<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line">- (<span class="keyword">void</span>)dismissViewControllerAnimated: (<span class="built_in">BOOL</span>)flag completion: (<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)presentModalViewController:(<span class="built_in">UIViewController</span> *)modalViewController animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">6</span>_0);</span><br><span class="line">- (<span class="keyword">void</span>)dismissModalViewControllerAnimated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">6</span>_0);</span><br></pre></td></tr></table></figure>
<p>但是有的时候我们的需求很特殊,比如在一个<code>ModalViewController</code>里要present另一个<code>ModalViewController</code>,甚至再present一个<code>ModalViewController</code>,<strong>然后</strong>可能在某个时候APP发出一条消息,需要一下子dismiss掉所有的<code>ModalViewController</code>(比如你在使用过程中,突然APP检测到你的登录状态异常,需要重新登录,这个时候所有的页面都需要消失),这时候该如何办呢?</p>
<p>正巧我现在正在做的项目遇到了这个问题,所以研究了一下,得到了以下的解决办法:</p>
<a id="more"></a>
<p>首先,必须知道现在整个APP最顶层的<code>ViewController</code>是哪个,我的做法是在每个<code>ViewController</code>的<code>viewWillAppear</code>中记录一下,当然这个操作是自动完成的,因为每个项目,我都会从<code>UIViewController</code>派生一个子类,然后再从这个子类派生所有的<code>ViewController</code>方便管理.</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MMViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MMViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    APP<span class="variable">.presentingController</span> = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>得到了顶层的<code>ViewController</code>以后,事情就简单了,我们只要追根溯源,找到最底层的<code>ViewController</code>就行了</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( APP<span class="variable">.presentingController</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIViewController</span> *vc = <span class="keyword">self</span><span class="variable">.presentingController</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( !vc<span class="variable">.presentingViewController</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (vc<span class="variable">.presentingViewController</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        vc = vc<span class="variable">.presentingViewController</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [vc dismissViewControllerAnimated:<span class="literal">YES</span> completion:^&#123;</span><br><span class="line"></span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>ModalViewController</code>是经常会用到的展现<code>ViewController</code>的方式,而显示和收起<code>ModalViewController</code>也是很简单的</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)presentViewController:(<span class="built_in">UIViewController</span> *)viewControllerToPresent animated: (<span class="built_in">BOOL</span>)flag completion:(<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line">- (<span class="keyword">void</span>)dismissViewControllerAnimated: (<span class="built_in">BOOL</span>)flag completion: (<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)presentModalViewController:(<span class="built_in">UIViewController</span> *)modalViewController animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">6</span>_0);</span><br><span class="line">- (<span class="keyword">void</span>)dismissModalViewControllerAnimated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">6</span>_0);</span><br></pre></td></tr></table></figure>
<p>但是有的时候我们的需求很特殊,比如在一个<code>ModalViewController</code>里要present另一个<code>ModalViewController</code>,甚至再present一个<code>ModalViewController</code>,<strong>然后</strong>可能在某个时候APP发出一条消息,需要一下子dismiss掉所有的<code>ModalViewController</code>(比如你在使用过程中,突然APP检测到你的登录状态异常,需要重新登录,这个时候所有的页面都需要消失),这时候该如何办呢?</p>
<p>正巧我现在正在做的项目遇到了这个问题,所以研究了一下,得到了以下的解决办法:</p>]]>
    
    </summary>
    
      <category term="view controller" scheme="http://adad184.com/tags/view-controller/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[个人总结的一些 APP 的代码实践]]></title>
    <link href="http://adad184.com/2013/09/10/ge-ren-zong-jie-de-yi-xie-app-de-dai-ma-shi-jian/"/>
    <id>http://adad184.com/2013/09/10/ge-ren-zong-jie-de-yi-xie-app-de-dai-ma-shi-jian/</id>
    <published>2013-09-10T06:56:46.000Z</published>
    <updated>2015-04-15T03:27:20.000Z</updated>
    <content type="html"><![CDATA[<h2 id="建立一个辅助的APP类,减少对AppDelegate的修改">建立一个辅助的APP类,减少对AppDelegate的修改</h2><p>最开始接触iOS开发的时候,如果需要一些全局变量或者全局函数的时候,总是直接在<code>AppDelegate</code>中添加,因为<code>AppDelegate</code>可以直接获取</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">UIApplication</span> sharedApplication]<span class="variable">.delegate</span></span><br></pre></td></tr></table></figure>
<p>但是时间长了还是觉得这样不太好,<code>AppDelegate</code>本身有其自己的作用(对于App本身的一些事件进行处理,如启动,切换,推送),这样做感觉怪怪的,所以还是自己弄一个专门处理我们所需的全局变亮或者全局函数的对象会更好一些</p>
<a id="more"></a>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//APPHelper.h</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">APPHelper</span></span></span><br><span class="line"></span><br><span class="line">+ (APPHelper*)call;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) configureWindow:(<span class="built_in">UIWindow</span>*)window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) AppDelegate *delegate;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">readonly</span>) <span class="built_in">UIWindow</span> *window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//APPHelper.m</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">APPHelper</span> ()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">APPHelper</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">id</span>)init</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        _delegate = (GGAppDelegate*)[<span class="built_in">UIApplication</span> sharedApplication]<span class="variable">.delegate</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ (APPHelper *)call</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span>  onceQueue;</span><br><span class="line">    <span class="keyword">static</span> APPHelper *appInstance;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceQueue, ^&#123;</span><br><span class="line">        appInstance = [[APPHelper alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> appInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIWindow</span> *)window</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.delegate</span><span class="variable">.window</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)configureWindow:(<span class="built_in">UIWindow</span>*)window</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UINavigationController</span> *nav = [[<span class="built_in">UINavigationController</span> alloc] init];</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    window<span class="variable">.rootViewController</span> = nav;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>然后 在预编译头<code>*.pch</code>中加入</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"AppHelper.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define APP ([APPHelper call])</span></span><br></pre></td></tr></table></figure>
<p>就可以直接在代码的任意一个地方直接使用此类了,如</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//设置APP为圆角</span></span><br><span class="line">APP<span class="variable">.window</span><span class="variable">.layer</span><span class="variable">.cornerRadius</span> = <span class="number">5.0</span>f;</span><br><span class="line">APP<span class="variable">.window</span><span class="variable">.layer</span><span class="variable">.masksToBounds</span> = <span class="literal">YES</span>;</span><br></pre></td></tr></table></figure>
<h2 id="简单的Autoresizing的宏">简单的Autoresizing的宏</h2><p>一开始我就喜欢代码布局,从来没使用过IB或者SB开发,所以如何在代码中用<strong>Autoresizing</strong>就显得很重要了(那个时候还没有<em>AutoLayout</em>).</p>
<p>为此我还专门研究了一下IB(那个时候还没有SB),并把生成的nib用<a href="https://github.com/akosma/nib2objc/" target="_blank" rel="external">nib2objc</a>转换成了代码来学习.</p>
<p>使用下面的宏,可以很轻松的实现<strong>Autoresizing</strong>.</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#define FlexibleT                   UIViewAutoresizingFlexibleTopMargin</span></span><br><span class="line"><span class="preprocessor">#define FlexibleB                   UIViewAutoresizingFlexibleBottomMargin</span></span><br><span class="line"><span class="preprocessor">#define FlexibleL                   UIViewAutoresizingFlexibleLeftMargin</span></span><br><span class="line"><span class="preprocessor">#define FlexibleR                   UIViewAutoresizingFlexibleRightMargin</span></span><br><span class="line"><span class="preprocessor">#define FlexibleH                   UIViewAutoresizingFlexibleHeight</span></span><br><span class="line"><span class="preprocessor">#define FlexibleW                   UIViewAutoresizingFlexibleWidth</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define FixedMarginT                FlexibleW | FlexibleB</span></span><br><span class="line"><span class="preprocessor">#define FixedMarginB                FlexibleW | FlexibleT</span></span><br><span class="line"><span class="preprocessor">#define FixedMarginL                FlexibleH | FlexibleR</span></span><br><span class="line"><span class="preprocessor">#define FixedMarginR                FlexibleH | FlexibleL</span></span><br><span class="line"><span class="preprocessor">#define FixedHorizental             FlexibleW | FlexibleT | FlexibleB</span></span><br><span class="line"><span class="preprocessor">#define FixedVertical               FlexibleH | FlexibleL | FlexibleR</span></span><br><span class="line"><span class="preprocessor">#define FixedALL                    FlexibleW | FlexibleH</span></span><br><span class="line"><span class="preprocessor">#define FixedCenter                 FlexibleL | FlexibleR | FlexibleT | FlexibleB</span></span><br></pre></td></tr></table></figure>
<p>使用上述的宏时,最好对<code>UIView</code>扩展一下,添加下列方法</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>) autoResize:(<span class="built_in">UIViewAutoresizing</span>) type</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.autoresizingMask</span> = mask;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.autoresizesSubviews</span> = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用方法如下</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XXXViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">id</span>)init</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="comment">// Custom initialization</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.tableView</span> = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span> style:<span class="built_in">UITableViewStyleGrouped</span>];</span><br><span class="line">        **[<span class="keyword">self</span><span class="variable">.tableView</span> autoResize:FixedALL];**    </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.view</span> addSubview:<span class="keyword">self</span><span class="variable">.tableView</span>];</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于各个宏的作用如下</p>
<p>||              宏             ||          含义        ||<br>||:—————————————:||:——————————:||<br>|| FixedMarginB               ||      下侧距离固定      ||<br>|| FixedMarginL               ||      左侧距离固定      ||<br>|| FixedMarginR               ||      右侧距离固定      ||<br>|| FixedHorizental            ||      左右距离固定      ||<br>|| FixedVertical              ||      上下距离固定      ||<br>|| FixedALL                   ||      四周距离固定      ||<br>|| FixedCenter                ||      居中             ||</p>
<p>从这张图上我们可以看到对于各个值的含义,出自<a href="http://stackoverflow.com/questions/7754851/autoresizing-masks-programmatically-vs-interfact-builder-xib-nib" target="_blank" rel="external">stackoverflow</a></p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-10-ge-ren-zong-jie-de-%5B%3F%5D-xie-app-de-dai-ma-shi-jian1.png" alt="值定义"></p>
<p>至今为止这套宏在我的开发过程中还使用得很好,所以我也没有去研究新的<code>AutoLayout</code>(好像也比较的复杂,),不过在<code>Github</code>上有个对<code>AutoLayout</code>封装得很好的库<a href="https://github.com/cloudkite/Masonry" target="_blank" rel="external">Masonry</a>,有空的时候可以研究一下</p>
<h2 id="一些常用的Category">一些常用的Category</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  UIColor</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通过RGBA值(比如红色FF0000FF)生成UIColor</span></span><br><span class="line">+ (<span class="built_in">UIColor</span>* ) colorWithHex:(<span class="keyword">int</span>)color &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">float</span> red = (color &amp; <span class="number">0xff000000</span>) &gt;&gt; <span class="number">24</span>;</span><br><span class="line">    <span class="keyword">float</span> green = (color &amp; <span class="number">0x00ff0000</span>) &gt;&gt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">float</span> blue = (color &amp; <span class="number">0x0000ff00</span>) &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">float</span> alpha = (color &amp; <span class="number">0x000000ff</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:red/<span class="number">255.0</span> green:green/<span class="number">255.0</span> blue:blue/<span class="number">255.0</span> alpha:alpha/<span class="number">255.0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  UIImage</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//复制当前图片</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)duplicate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGImageRef</span> newCgIm = <span class="built_in">CGImageCreateCopy</span>(<span class="keyword">self</span><span class="variable">.CGImage</span>);</span><br><span class="line">    <span class="built_in">UIImage</span> *newImage = [<span class="built_in">UIImage</span> imageWith<span class="built_in">CGImage</span>:newCgIm scale:<span class="keyword">self</span><span class="variable">.scale</span> orientation:<span class="keyword">self</span><span class="variable">.imageOrientation</span>];</span><br><span class="line">    <span class="built_in">CGImageRelease</span>(newCgIm);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> newImage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使当前图片可拉伸</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)stretched</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGSize</span> size = <span class="keyword">self</span><span class="variable">.size</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIEdgeInsets</span> insets = <span class="built_in">UIEdgeInsetsMake</span>(truncf(size<span class="variable">.height</span>-<span class="number">1</span>)/<span class="number">2</span>, truncf(size<span class="variable">.width</span>-<span class="number">1</span>)/<span class="number">2</span>, truncf(size<span class="variable">.height</span>-<span class="number">1</span>)/<span class="number">2</span>, truncf(size<span class="variable">.width</span>-<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> resizableImageWithCapInsets:insets];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使当前图片抗锯齿(当图片在旋转时有用, 原理就是在图片周围加1px的透明像素)</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)antiAlias</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> border = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">CGRect</span> rect = <span class="built_in">CGRectMake</span>(border, border, <span class="keyword">self</span><span class="variable">.size</span><span class="variable">.width</span>-<span class="number">2</span>*border, <span class="keyword">self</span><span class="variable">.size</span><span class="variable">.height</span>-<span class="number">2</span>*border);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImage</span> *img = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(<span class="built_in">CGSizeMake</span>(rect<span class="variable">.size</span><span class="variable">.width</span>,rect<span class="variable">.size</span><span class="variable">.height</span>));</span><br><span class="line">    [<span class="keyword">self</span> drawInRect:<span class="built_in">CGRectMake</span>(-<span class="number">1</span>, -<span class="number">1</span>, <span class="keyword">self</span><span class="variable">.size</span><span class="variable">.width</span>, <span class="keyword">self</span><span class="variable">.size</span><span class="variable">.height</span>)];</span><br><span class="line">    img = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(<span class="keyword">self</span><span class="variable">.size</span>);</span><br><span class="line">    [img drawInRect:rect];</span><br><span class="line">    <span class="built_in">UIImage</span>* antiImage = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> antiImage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建纯色的图片</span></span><br><span class="line">+ (<span class="built_in">UIImage</span> *)imageWithColor:(<span class="built_in">UIColor</span> *)color Size:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGRect</span> rect = <span class="built_in">CGRectMake</span>(<span class="number">0.0</span>f, <span class="number">0.0</span>f, size<span class="variable">.width</span>, size<span class="variable">.height</span>);</span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(rect<span class="variable">.size</span>);</span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">UIGraphicsGetCurrentContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextSetFillColorWithColor</span>(context, [color <span class="built_in">CGColor</span>]);</span><br><span class="line">    <span class="built_in">CGContextFillRect</span>(context, rect);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImage</span> *image = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [image stretched];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//imageNamed的非缓存版</span></span><br><span class="line">+ (<span class="built_in">UIImage</span> *)imageName:(<span class="built_in">NSString</span> *)name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *path = [[[<span class="built_in">NSBundle</span> mainBundle] bundlePath] stringByAppendingString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"/%@"</span>,name]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">UIImage</span> imageWithContentsOfFile:path];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  UIButton</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">float</span>)x</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.frame</span><span class="variable">.origin</span><span class="variable">.x</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">float</span>)y</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.frame</span><span class="variable">.origin</span><span class="variable">.y</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">float</span>)w</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.frame</span><span class="variable">.size</span><span class="variable">.width</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">float</span>)h</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span><span class="variable">.frame</span><span class="variable">.size</span><span class="variable">.height</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setTagName:(<span class="built_in">NSString</span>*)name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.tag</span> = [name hash];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIView</span> *)viewWithName:(<span class="built_in">NSString</span> *)name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> viewWithTag:[name hash]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) autoResize:(<span class="built_in">UIViewAutoresizing</span>)mask</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.autoresizingMask</span> = mask;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.autoresizesSubviews</span> = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setPosition:(<span class="built_in">CGRect</span>)position</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.bounds</span> = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, position<span class="variable">.size</span><span class="variable">.width</span>, position<span class="variable">.size</span><span class="variable">.height</span>);</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.center</span> = <span class="built_in">CGPointMake</span>(position<span class="variable">.origin</span><span class="variable">.x</span>,position<span class="variable">.origin</span><span class="variable">.y</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  UIButton</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">UIButton</span>*) buttonWithTarget:(<span class="keyword">id</span>)target action:(SEL)sel</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIButton</span> *btn = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeCustom</span>];</span><br><span class="line">    [btn addTarget:target action:sel forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">    <span class="keyword">return</span> btn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) setTextN:(<span class="built_in">NSString</span>*)n H:(<span class="built_in">NSString</span>*)h D:(<span class="built_in">NSString</span>*)d S:(<span class="built_in">NSString</span> *)s</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setTitle:n forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( h )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setTitle:h forState:<span class="built_in">UIControlStateHighlighted</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( d )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setTitle:d forState:<span class="built_in">UIControlStateDisabled</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( s )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setTitle:s forState:<span class="built_in">UIControlStateSelected</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) setImageN:(<span class="built_in">NSString</span>*)n H:(<span class="built_in">NSString</span>*)h D:(<span class="built_in">NSString</span>*)d S:(<span class="built_in">NSString</span> *)s</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setImage:[<span class="built_in">UIImage</span> imageName:n] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( h )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setImage:[<span class="built_in">UIImage</span> imageName:h] forState:<span class="built_in">UIControlStateHighlighted</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( d )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setImage:[<span class="built_in">UIImage</span> imageName:d] forState:<span class="built_in">UIControlStateDisabled</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( s )</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="keyword">self</span> setImage:[<span class="built_in">UIImage</span> imageName:s] forState:<span class="built_in">UIControlStateSelected</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ( h )</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="keyword">self</span> setImage:[<span class="built_in">UIImage</span> imageName:h] forState:<span class="built_in">UIControlStateHighlighted</span> | <span class="built_in">UIControlStateSelected</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  NSString</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">-(<span class="built_in">NSString</span> *) trimHead</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSInteger</span> i;</span><br><span class="line">    <span class="built_in">NSCharacterSet</span> *cs = [<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet];</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> length]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ![cs characterIsMember: [<span class="keyword">self</span> characterAtIndex: i]] ) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> substringFromIndex: i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="built_in">NSString</span> *) trimTail</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSInteger</span> i;</span><br><span class="line">    <span class="built_in">NSCharacterSet</span> *cs = [<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet];</span><br><span class="line">    <span class="keyword">for</span>(i = [<span class="keyword">self</span> length] -<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ![cs characterIsMember: [<span class="keyword">self</span> characterAtIndex: i]] ) <span class="keyword">break</span>;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> substringToIndex: (i+<span class="number">1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *) trimBoth</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [[<span class="keyword">self</span> trimHead] trimTail];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span>*)MD5</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *ptr = [<span class="keyword">self</span> UTF8String];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> md5Buffer[CC_MD5_DIGEST_LENGTH];</span><br><span class="line">    </span><br><span class="line">    CC_MD5(ptr, strlen(ptr), md5Buffer);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableString</span> *output = [<span class="built_in">NSMutableString</span> stringWithCapacity:CC_MD5_DIGEST_LENGTH * <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CC_MD5_DIGEST_LENGTH; i++) </span><br><span class="line">        [output appendFormat:<span class="string">@"%02x"</span>,md5Buffer[i]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)equals:(<span class="built_in">NSString</span> *)str</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> compare:str] == <span class="built_in">NSOrderedSame</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CGFloat</span>)heightByFont:(<span class="built_in">UIFont</span> *)font width:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> sizeWithFont:font</span><br><span class="line">            constrainedToSize:<span class="built_in">CGSizeMake</span>(width, <span class="built_in">CGFLOAT_MAX</span>)</span><br><span class="line">                lineBreakMode:<span class="built_in">NSLineBreakByWordWrapping</span>]<span class="variable">.height</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  NSDictionary</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使取得的值不会使NSNull,在JSON解析的时候会有这种问题,有时候服务器返回了 &#123;"test":null&#125;,但是被解析成了NSNull,这时APP这边处理起来会比较麻烦</span></span><br><span class="line">- (<span class="keyword">id</span>)objectForKeyNotNull:(<span class="keyword">id</span>)key &#123;</span><br><span class="line">    <span class="keyword">id</span> object = [<span class="keyword">self</span> objectForKey:key];</span><br><span class="line">    <span class="keyword">if</span> (object == [<span class="built_in">NSNull</span> null])</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  NSAttributedString</span></span><br><span class="line"><span class="comment">///////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CGFloat</span>)heightByWidth:(<span class="built_in">CGFloat</span>)width</span><br><span class="line">&#123;</span><br><span class="line">    CTFramesetterRef framesetter = CTFramesetterCreateWithAttributedString((__bridge <span class="built_in">CFAttributedStringRef</span>)<span class="keyword">self</span>);</span><br><span class="line">    <span class="built_in">CGSize</span> targetSize = <span class="built_in">CGSizeMake</span>(width, <span class="built_in">CGFLOAT_MAX</span>);</span><br><span class="line">    <span class="built_in">CGSize</span> fitSize = CTFramesetterSuggestFrameSizeWithConstraints(framesetter, <span class="built_in">CFRangeMake</span>(<span class="number">0</span>, [<span class="keyword">self</span> length]), <span class="literal">NULL</span>, targetSize, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">CFRelease</span>(framesetter);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> fitSize<span class="variable">.height</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="建立一个辅助的APP类,减少对AppDelegate的修改">建立一个辅助的APP类,减少对AppDelegate的修改</h2><p>最开始接触iOS开发的时候,如果需要一些全局变量或者全局函数的时候,总是直接在<code>AppDelegate</code>中添加,因为<code>AppDelegate</code>可以直接获取</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">UIApplication</span> sharedApplication]<span class="variable">.delegate</span></span><br></pre></td></tr></table></figure>
<p>但是时间长了还是觉得这样不太好,<code>AppDelegate</code>本身有其自己的作用(对于App本身的一些事件进行处理,如启动,切换,推送),这样做感觉怪怪的,所以还是自己弄一个专门处理我们所需的全局变亮或者全局函数的对象会更好一些</p>]]>
    
    </summary>
    
      <category term="practice" scheme="http://adad184.com/tags/practice/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NimbusKit 介绍与使用实践]]></title>
    <link href="http://adad184.com/2013/08/06/at-nimbus-jie-shao-yu-shi-yong-shi-jian/"/>
    <id>http://adad184.com/2013/08/06/at-nimbus-jie-shao-yu-shi-yong-shi-jian/</id>
    <published>2013-08-06T08:51:28.000Z</published>
    <updated>2015-04-15T12:05:23.000Z</updated>
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p><a href="http://nimbuskit.info/" target="_blank" rel="external">NimbusKit 官网</a><br><a href="https://github.com/jverkoey/nimbus" target="_blank" rel="external">NimbusKit 源码</a></p>
<p>NimbusKit是一组用于快速开发的iOS框架,是源自<em>Facebook</em>的著名框架<code>Three20</code>的替代者,包括下面几大类的功能</p>
<ul>
<li>Attributed Label    -   富文字Label</li>
<li>Badge - 数字角标</li>
<li>Interapp - 应用间交互</li>
<li>Launcher - 类桌面启动器</li>
<li>Network Image - 网络图片下载显示</li>
<li>Photo Albums - 相册</li>
<li>Web Controller - 浏览器</li>
<li>Table Models - 表格数据模型</li>
<li>Overview - 直观方便的调试分析内嵌图形工具</li>
<li>等…</li>
</ul>
<p>NimbusKit的demo很直观,编译运行以后就可以体验其强大的功能了</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian2.png" alt="Nimbus Demo"></p>
<a id="more"></a>
<h1 id="使用">使用</h1><p>因为之前的项目的富文本设计要支持<code>iOS5</code>和<code>iOS6</code>,而<code>attributeString</code>特性只有iOS6支持,所以使用了<em>NIAttributedLabel</em></p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian1.png" alt="富文本"></p>
<p>这次新的项目由于有大量的表单页面,考虑到完全自己实现太耗时间,所以又重新考虑了<code>NimbusKit</code>的<code>Table Models</code></p>
<p>NimbusKit提供的表单组件如下</p>
<p>|| 组件                               || 功能           ||<br>||:————————————————:||:——————:||<br>|| NIRadioGroup                     || 多选一      ||<br>|| NITextInputFormElement           || 文本输入         ||<br>|| NISwitchFormElement              || 开关           ||<br>|| NISliderFormElement              || 滑动条      ||<br>|| NISegmentedControlFormElement    || 分段           ||<br>|| NIDatePickerFormElement          || 时间选择     ||<br>|| NITitleCellObject                || 单行文本         ||<br>|| NISubtitleCellObject             || 主副文本         ||<br>|| …                              || 等其他      ||</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian4.png" alt="基础表单组件"></p>
<p>这里首先要介绍一下NimbusKit的Table-Modal-Action模型,先上一段简单代码</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GGJSZController</span> ()</span></span><br><span class="line">&lt;</span><br><span class="line"><span class="built_in">UITableViewDelegate</span>,</span><br><span class="line"><span class="built_in">UITextFieldDelegate</span></span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) NITableViewModel* model;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) NITableViewActions *action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) NIActionBlock queryBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">GGJSZController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">id</span>)init</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.tableView</span> = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span> style:<span class="built_in">UITableViewStyleGrouped</span>];</span><br><span class="line">        ...</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.view</span> addSubview:<span class="keyword">self</span><span class="variable">.tableView</span>];</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> configureBlock];</span><br><span class="line">        [<span class="keyword">self</span> configureForm];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)configureBlock</span><br><span class="line">&#123;</span><br><span class="line">    __<span class="keyword">weak</span> GGUserController *weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.queryBlock</span> = ^<span class="built_in">BOOL</span>(<span class="keyword">id</span> object, <span class="built_in">UIViewController</span> *controller, <span class="built_in">NSIndexPath</span>* indexPath) &#123;</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line">        ...</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)configureForm</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.action</span> = [[NITableViewActions alloc] initWithTarget:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSArray</span>* tableContents =</span><br><span class="line">    [<span class="built_in">NSArray</span> arrayWithObjects:</span><br><span class="line">     <span class="string">@"请输入驾驶证号"</span>,</span><br><span class="line">     [NITextFieldFormElement textFieldElementWithID:<span class="number">0</span> labelText:<span class="string">@"驾驶证号"</span> placeholderText:<span class="string">@"请输入驾驶证号"</span> value:TESTID delegate:<span class="keyword">self</span>],</span><br><span class="line">     [<span class="keyword">self</span><span class="variable">.action</span> attachToObject:[NITapCellObject objectWithTitle:<span class="string">@"查询"</span> color:COLOR_TAP]</span><br><span class="line">                 navigationBlock:<span class="keyword">self</span><span class="variable">.queryBlock</span>],</span><br><span class="line">     <span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.model</span> = [[NITableViewModel alloc] initWithSectionedArray:tableContents</span><br><span class="line">                                                         delegate:(<span class="keyword">id</span>)[NICellFactory class]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.dataSource</span> = <span class="keyword">self</span><span class="variable">.model</span>;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.tableView</span><span class="variable">.delegate</span> = [<span class="keyword">self</span><span class="variable">.action</span> forwardingTo:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>这段代码的效果如图</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian3.png" alt="表单效果"></p>
<p>其关键的地方就是</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) NITableViewModel* model;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) NITableViewActions *action;</span><br></pre></td></tr></table></figure>
<p><code>NITableViewModel</code> 接管了<code>UITableView</code>的<code>dataSource</code>,并用一种更简单直观的方式创建表格内容,只需要创建对应的tableContents即可生成表单</p>
<p><code>NITableViewActions</code> 接管了<code>UITableView</code>的<code>delegate</code>,提供了<code>NITableViewModel</code>中已连接对象(attachToObject)对点击事件以<em>block</em>的方式进行响应</p>
<p><code>NITableViewModel</code>与<code>NITableViewActions</code>的恰当配合则能够生成所需的表单</p>
<h1 id="自定义表单">自定义表单</h1><p>在日常的开发中,仅仅依靠NimbusKit自带的表单组件肯定是无法完全满足我们的需求的,所以自定义表单组件则是非常必要的功能,而在NimbusKit中自定义表单组件也是非常容易的,比如自带的表单组件中只有独立的Label或者Input组件,并没有像上图那样左边为Label右边为Input的组件,而上图中所见的输入身份证的组件,即为我自定义的表单组件之一,其代码如下</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NITextFieldFormElement</span> : <span class="title">NIFormElement</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">id</span>)textFieldElementWithID:(<span class="built_in">NSInteger</span>)elementID labelText:(<span class="built_in">NSString</span>*)labelText placeholderText:(<span class="built_in">NSString</span> *)placeholderText value:(<span class="built_in">NSString</span> *)value delegate:(<span class="keyword">id</span>&lt;<span class="built_in">UITextFieldDelegate</span>&gt;)delegate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span>* labelText;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span>* placeholderText;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span>* value;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="keyword">id</span>&lt;<span class="built_in">UITextFieldDelegate</span>&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NITextFieldFormElementCell</span> : <span class="title">NIFormElementCell</span> &lt;<span class="title">UITextFieldDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, NI_STRONG) GGTextField* textField;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NITextFieldFormElement</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">id</span>)textFieldElementWithID:(<span class="built_in">NSInteger</span>)elementID labelText:(<span class="built_in">NSString</span> *)labelText placeholderText:(<span class="built_in">NSString</span> *)placeholderText value:(<span class="built_in">NSString</span> *)value delegate:(<span class="keyword">id</span>&lt;<span class="built_in">UITextFieldDelegate</span>&gt;)delegate</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    NITextFieldFormElement* element = [<span class="keyword">super</span> elementWithID:elementID];</span><br><span class="line">    element<span class="variable">.labelText</span> = labelText;</span><br><span class="line">    element<span class="variable">.placeholderText</span> = placeholderText;</span><br><span class="line">    element<span class="variable">.value</span> = value;</span><br><span class="line">    element<span class="variable">.delegate</span> = delegate;</span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (Class)cellClass &#123;</span><br><span class="line">    <span class="keyword">return</span> [NITextFieldFormElementCell class];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NITextFieldFormElementCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> textField = _textField;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">- (<span class="keyword">id</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier])) &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.selectionStyle</span> = <span class="built_in">UITableViewCellSelectionStyleNone</span>;</span><br><span class="line">        </span><br><span class="line">        _textField = [[GGTextField alloc] init];</span><br><span class="line">        [_textField setTag:<span class="keyword">self</span><span class="variable">.element</span><span class="variable">.elementID</span>];</span><br><span class="line">        [_textField setAdjustsFontSizeToFitWidth:<span class="literal">YES</span>];</span><br><span class="line">        [_textField setMinimumFontSize:<span class="number">10.0</span>f];</span><br><span class="line">        [_textField setTextAlignment:<span class="built_in">NSTextAlignmentRight</span>];</span><br><span class="line">        [_textField addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(textFieldDidChangeValue) forControlEvents:<span class="built_in">UIControlEventAllEditingEvents</span>];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.contentView</span> addSubview:_textField];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">- (<span class="keyword">void</span>)layoutSubviews &#123;</span><br><span class="line">    [<span class="keyword">super</span> layoutSubviews];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> labelWidth = <span class="number">80</span>;</span><br><span class="line">    <span class="built_in">CGRect</span> frame = <span class="built_in">UIEdgeInsetsInsetRect</span>(<span class="keyword">self</span><span class="variable">.contentView</span><span class="variable">.bounds</span>, <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>));</span><br><span class="line">    frame = <span class="built_in">CGRectMake</span>(frame<span class="variable">.origin</span><span class="variable">.x</span>+labelWidth, frame<span class="variable">.origin</span><span class="variable">.y</span>, frame<span class="variable">.size</span><span class="variable">.width</span>-labelWidth, frame<span class="variable">.size</span><span class="variable">.height</span>);</span><br><span class="line">    _textField<span class="variable">.frame</span> = frame;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">- (<span class="keyword">void</span>)prepareForReuse &#123;</span><br><span class="line">    [<span class="keyword">super</span> prepareForReuse];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span><span class="variable">.textLabel</span><span class="variable">.text</span> = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    _textField<span class="variable">.placeholder</span> = <span class="literal">nil</span>;</span><br><span class="line">    _textField<span class="variable">.text</span> = <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldUpdateCellWithObject:(NITextFieldFormElement *)textfieldElement &#123;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">super</span> shouldUpdateCellWithObject:textfieldElement]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span><span class="variable">.textLabel</span><span class="variable">.text</span> = textfieldElement<span class="variable">.labelText</span>;</span><br><span class="line">        </span><br><span class="line">        _textField<span class="variable">.placeholder</span> = textfieldElement<span class="variable">.placeholderText</span>;</span><br><span class="line">        _textField<span class="variable">.text</span> = textfieldElement<span class="variable">.value</span>;</span><br><span class="line">        _textField<span class="variable">.delegate</span> = textfieldElement<span class="variable">.delegate</span>;</span><br><span class="line">        </span><br><span class="line">        _textField<span class="variable">.tag</span> = <span class="keyword">self</span><span class="variable">.tag</span>;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> setNeedsLayout];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">- (<span class="keyword">void</span>)textFieldDidChangeValue &#123;</span><br><span class="line">    NITextFieldFormElement* textInputElement = (NITextFieldFormElement *)<span class="keyword">self</span><span class="variable">.element</span>;</span><br><span class="line">    textInputElement<span class="variable">.value</span> = _textField<span class="variable">.text</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>上述代码给出了如何自定义NimbusKit中的表单组件,可见表单组件几乎都是<code>NIFormElement</code>的子类,只要基于此类,定义显示所需的控件到<code>NIFormElement</code>内部,并调整对应位置即可</p>
<p>至此我们已经知道如何自定义组件了,但是如果有稍微复杂的需求的话,要如何实现呢? </p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian5.png" alt="复杂的自定义组件"></p>
<p>如图,输入<strong><em>出发城市</em></strong>和<strong><em>目的城市</em></strong>的组件也是一个自定义组件,除了有很多Label和Input之外,其高度也跟普通的组件不一样.</p>
<p>其实自定义高度很简单,只要重载<code>NICell</code>(比如<code>NITextFieldFormElementCell</code>)的此方法并返回所需的高度</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">CGFloat</span>)heightForObject:(<span class="keyword">id</span>)object atIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath tableView:(<span class="built_in">UITableView</span> *)tableView;</span><br></pre></td></tr></table></figure>
<p>然后在使用的ViewController中调用UITableView的方法</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="built_in">CGFloat</span> height = tableView<span class="variable">.rowHeight</span>;</span><br><span class="line">    <span class="keyword">id</span> object = [(NITableViewModel *)tableView<span class="variable">.dataSource</span> objectAtIndexPath:indexPath];</span><br><span class="line">    <span class="keyword">id</span> class = [object cellClass];</span><br><span class="line">    <span class="keyword">if</span> ([class respondsToSelector:<span class="keyword">@selector</span>(heightForObject:atIndexPath:tableView:)]) &#123;</span><br><span class="line">        height = [class heightForObject:object atIndexPath:indexPath tableView:tableView];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> height;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>即可自定义此组件的高度了(其实直接在上述方法中直接返回对应的高度即可,但是上述代码则有很高的通用性)</p>
<h1 id="小结">小结</h1><p>至此,我们已经了解了<code>NimbusKit</code>的基本功能和如何对其表单模型进行自定义.</p>
<p>除了此次着重介绍的Table-Action模型之外,其实<code>NimbusKit</code>还有很多值得使用的功能,如<strong>Launcher</strong>功能,<strong>Overview</strong>功能,实用且集成起来很简单,在这就不一一介绍了.</p>
<p>最后,简单介绍一下NimbusKit的作者<a href="http://jeffverkoeyen.com/" target="_blank" rel="external">Jeff Verkoeyen</a>,其主要作品有:</p>
<ul>
<li>Facebook for iPad ( June 2010 - June 2011 )</li>
<li>Google Maps for iPhone ( June 2012 - April 2013 )</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="介绍">介绍</h1><p><a href="http://nimbuskit.info/">NimbusKit 官网</a><br><a href="https://github.com/jverkoey/nimbus">NimbusKit 源码</a></p>
<p>NimbusKit是一组用于快速开发的iOS框架,是源自<em>Facebook</em>的著名框架<code>Three20</code>的替代者,包括下面几大类的功能</p>
<ul>
<li>Attributed Label    -   富文字Label</li>
<li>Badge - 数字角标</li>
<li>Interapp - 应用间交互</li>
<li>Launcher - 类桌面启动器</li>
<li>Network Image - 网络图片下载显示</li>
<li>Photo Albums - 相册</li>
<li>Web Controller - 浏览器</li>
<li>Table Models - 表格数据模型</li>
<li>Overview - 直观方便的调试分析内嵌图形工具</li>
<li>等…</li>
</ul>
<p>NimbusKit的demo很直观,编译运行以后就可以体验其强大的功能了</p>
<p><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06-at-nimbus-jie-shao-yu-shi-yong-shi-jian2.png" alt="Nimbus Demo"></p>]]>
    
    </summary>
    
      <category term="nimbus" scheme="http://adad184.com/tags/nimbus/"/>
    
      <category term="practice" scheme="http://adad184.com/tags/practice/"/>
    
      <category term="经验介绍" scheme="http://adad184.com/categories/%E7%BB%8F%E9%AA%8C%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何让 UITableViewCell 中的 imageView 大小固定]]></title>
    <link href="http://adad184.com/2013/07/05/ru-he-rang-uitableviewcell-zhong-de-imageview-da-xiao-gu-ding/"/>
    <id>http://adad184.com/2013/07/05/ru-he-rang-uitableviewcell-zhong-de-imageview-da-xiao-gu-ding/</id>
    <published>2013-07-05T08:41:39.000Z</published>
    <updated>2015-04-15T11:47:23.000Z</updated>
    <content type="html"><![CDATA[<p><code>UITableView</code>可以算是使用频率最高的组件之一的,在开发过程中经常需要展示一些简单的信息列表<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06%2013.33.25.png" alt="常见列表布局"></p>
<p>如图,很多页面其实就是这种展示结果,通常需要<code>imageView</code>,<code>textLabel</code>,<code>detailTextlabel</code>,而<code>UITableViewCell</code>本身提供了方便的自动布局(当有图片和没图片时,textLabel和detailLabel的位置会左右自动调整). 但是图片的大小却是没有办法固定的(直接设置<code>imageView.frame</code>是无法固定<code>imageView</code>的大小的),那么一般来说解决这个问题的办法有两种:</p>
<ul>
<li>固定显示图片的大小(包括PlaceHolder)</li>
<li>自定义tableViewCell,添加自定义的<code>imageView</code>,<code>textLabel</code>和<code>detailTextLabel</code></li>
</ul>
<p>这两种方式都可以解决这个问题,但是这两种方式其实都挺麻烦的,能否直接固定imageView的大小呢? 方法是有的,只需要重载<code>layoutSubviews</code>即可</p>
<a id="more"></a>
<figure class="highlight objc"><figcaption><span>派生UITableViewCell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//自定义一个Cell</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MMCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MMCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//重载layoutSubviews</span></span><br><span class="line">- (<span class="keyword">void</span>)layoutSubviews</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIImage</span> *img = <span class="keyword">self</span><span class="variable">.imageView</span><span class="variable">.image</span>;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.imageView</span><span class="variable">.image</span> = [<span class="built_in">UIImage</span> imageName:<span class="string">@"res/PlaceHolder.png"</span>];</span><br><span class="line">    [<span class="keyword">super</span> layoutSubviews];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.imageView</span><span class="variable">.image</span> = img;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>这样,我们只要使用<code>MMCell</code>就可以固定<code>imageView</code>的大小了,且大小为<code>PlaceHolder.png</code>的大小(一般来说这种页面都会使用一个<code>PlaceHolder.png</code>来显示默认图片).</p>
<p>原理是在<code>UItableVeiw</code>的<code>layoutSubviews</code>调用时,会根据<code>imageView.image</code>的大小来调整<code>imageView</code>,<code>textLabel</code>,<code>detailTextLabel</code>的位置,在此之前我们先将<code>imageView.image</code>设置为<code>PlaceHolder.png</code>图片,等待重新布局完后再将原本的图片设置回去就可以了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>UITableView</code>可以算是使用频率最高的组件之一的,在开发过程中经常需要展示一些简单的信息列表<br><img src="http://7xibqv.com1.z0.glb.clouddn.com/2013-12-06%2013.33.25.png" alt="常见列表布局"></p>
<p>如图,很多页面其实就是这种展示结果,通常需要<code>imageView</code>,<code>textLabel</code>,<code>detailTextlabel</code>,而<code>UITableViewCell</code>本身提供了方便的自动布局(当有图片和没图片时,textLabel和detailLabel的位置会左右自动调整). 但是图片的大小却是没有办法固定的(直接设置<code>imageView.frame</code>是无法固定<code>imageView</code>的大小的),那么一般来说解决这个问题的办法有两种:</p>
<ul>
<li>固定显示图片的大小(包括PlaceHolder)</li>
<li>自定义tableViewCell,添加自定义的<code>imageView</code>,<code>textLabel</code>和<code>detailTextLabel</code></li>
</ul>
<p>这两种方式都可以解决这个问题,但是这两种方式其实都挺麻烦的,能否直接固定imageView的大小呢? 方法是有的,只需要重载<code>layoutSubviews</code>即可</p>]]>
    
    </summary>
    
      <category term="cell" scheme="http://adad184.com/tags/cell/"/>
    
      <category term="tableview" scheme="http://adad184.com/tags/tableview/"/>
    
      <category term="技巧心得" scheme="http://adad184.com/categories/%E6%8A%80%E5%B7%A7%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
</feed>